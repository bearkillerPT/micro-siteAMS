{"version":3,"sources":["assets/quicheVegsGluten.jpg","assets/cremedeespinafres.jpg","assets/saladaqueijoserra.jpg","assets/vegifruit.png","assets/greencity.png","assets/saladasmais.jpg","assets/sandesBase.jpg","assets/pratoCarne.jpg","assets/pratoPeixe.jpg","assets/cartState.js","screens/AppCliente/Cart.js","Store.js","screens/AppCliente/RestauranteMenu.js","screens/AppCliente/Restaurantes.js","screens/AppCliente/RestauranteStack.js","screens/AppCliente/Home.js","screens/AppCliente/HomeStack.js","screens/AppCliente/AppClientes.js","screens/AppRestaurante/Pratos.js","screens/AppRestaurante/PratosStack.js","screens/AppRestaurante/Orders.js","screens/AppRestaurante/OrdersStack.js","screens/AppRestaurante/AppRestaurante.js","screens/AppEstafeta/Orders.js","screens/AppEstafeta/OrdersStack.js","screens/AppEstafeta/Feedback.js","screens/AppEstafeta/FeedbackStack.js","screens/AppEstafeta/AppEstafeta.js","App.js","web-build/register-service-worker.js","assets/xmaspromo.jpg","assets/newYearPromo.jpg"],"names":["module","exports","INITIAL_CART","cart","restaurant","isLogged","setLogged","val","combineReducers","cartReducer","state","action","type","restauranteIn","restaurants","prato","Pratos","payload","name","concat","filter","require","CartScreen","props","dispatch","useDispatch","useSelector","View","ScrollView","map","TouchableHighlight","underlayColor","activeOpacity","style","styles","button","key","id","onPress","delPrato","containerRow","Image","image","source","containerColumn","Text","restaurantesOffer","foodText","Opçoes","Preço","res","getTotal","TouchableOpacity","payButtonContainer","payButtonText","Stack","createStackNavigator","Cart","route","Navigator","initialroute","screenOptions","headerTitleAlign","headerStyle","backgroundColor","headerTintColor","Screen","component","StyleSheet","create","flexDirection","paddingLeft","paddingBottom","fontSize","padding","fontWeight","textAlign","color","width","height","elevation","borderRadius","paddingVertical","paddingHorizontal","alignSelf","textTransform","configStore","createStore","RestauranteMenu","restaurante","params","Object","keys","addPrato","Home","navigation","flex","container","push","justifyContent","alignItems","username","bio","PricePoint","Tags","tag","RestauranteStack","console","log","restaurantes","restauranteMenu","initialParams","horizontal","promos","restaurantesPromo","restaurantesTitle","restaurantesDescr","descr","Linking","openURL","HomeStack","home","xmasPromo","newYearPromo","imgVegifruit","imgGreenCity","imgSaladasmais","imgQuichVeg","imgCremeEspi","imgSaladaQSerra","imgSandesBase","imgPratoCarne","imgPratoPeixe","store","App","AppContent","Logout","Restart","Tab","createBottomTabNavigator","NavigationContainer","independent","initialRouteName","tabBarIcon","focused","iconName","size","tabBarOptions","activeTintColor","inactiveTintColor","PratosStack","Orders","borderRightWidth","borderRightColor","AppWraper","RestaurantDishes","OrdersStack","estafeta","pedidos","pedido","morada","Feedback","averageR","count","feedback","rating","getAverageRate","readonly","startingValue","tintColor","imageSize","toFixed","FeedbackStack","users","useState","user","setUser","isCliente","setIsCliente","isRestaurante","setIsRestaurante","isEstafeta","setIsEstafeta","logged","getState","setIsLogged","Login","setPassword","title","loginContainer","inputView","TextInput","placeholder","input","onChangeText","pass","secureTextEntry","loginButtonContainer","typeUser","loginButtonText","paddingTop","borderTopWidth","borderTopColor","borderBottomWidth","borderBottomColor","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error"],"mappings":"yEAAAA,EAAOC,QAAU,IAA0B,8C,oBCA3CD,EAAOC,QAAU,IAA0B,+C,oBCA3CD,EAAOC,QAAU,IAA0B,+C,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,gwBCE3C,IAAMC,EAAe,CACjBC,KAAM,GACNC,WAAY,GACZC,UAAU,GAGDC,EAAY,SAAAC,GAAG,MAAK,CAC7B,KAAS,YACT,QAAYA,IAkCDC,kBAAgB,CAC3BC,YAtBJ,WAAsD,IAAjCC,EAAgC,uDAAxBR,EAAcS,EAAU,uCACjD,OAAOA,EAAOC,MACV,IAAK,WACD,IAAIC,EAAgB,GACpB,IAAK,IAAIT,KAAcU,GAAc,IAAK,IAAIC,KAASX,EAAWY,OAAaD,IAAUJ,EAAOM,UAASJ,EAAgBT,EAAWc,MACpI,GAAuB,IAApBR,EAAMN,YACFM,EAAMN,YAAcS,EAAe,OAE1C,cAAUH,GAAV,IACAP,KAAMO,EAAMP,KAAKgB,OAAOR,EAAOM,WACnC,IAAK,WACD,cAAUP,GAAV,IACAP,KAAMO,EAAMP,KAAKiB,QAAO,SAAAL,GAAK,OAAIA,IAAUJ,EAAOM,aACtD,IAAK,YACD,cAAUP,GAAV,IACIL,SAAUM,EAAOM,UACrB,QACA,OAAOP,M,q7BClCDW,EAAQ,KACPA,EAAQ,KACLA,EAAQ,KAGvB,SAASC,EAAWC,GACvB,IAAMC,EAAWC,cACXtB,EAAOuB,aAAY,SAAAhB,GAAK,OAAIA,EAAMD,YAAYN,QACvCuB,aAAY,SAAAhB,GAAK,OAAIA,EAAMD,YAAYL,cAQpD,OACI,kBAACuB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACIzB,EAAK0B,KAAI,SAAAd,GACL,OACI,kBAACe,EAAA,EAAD,CAAoBC,cAAe,UAAWC,cAAe,GAAKC,MAAOC,EAAOC,OAAQC,IAAKrB,EAAMsB,GAAIC,QAAS,kBAAMd,EDTtH,SAAAT,GAAK,MAAK,CAC9B,KAAS,WACT,QAAYA,GCOuIwB,CAASxB,MACpI,kBAACY,EAAA,EAAD,CAAMM,MAAOC,EAAOM,cAChB,kBAACC,EAAA,EAAD,CAAOR,MAAOC,EAAOQ,MAAOC,OAAQ5B,EAAM2B,QAC1C,kBAACf,EAAA,EAAD,CAAMM,MAAOC,EAAOU,iBAChB,kBAACC,EAAA,EAAD,CAAMZ,MAAOC,EAAOY,mBAAoB/B,EAAMG,MAC9C,kBAAC2B,EAAA,EAAD,CAAMZ,MAAOC,EAAOa,UAApB,kBAAwChC,EAAMiC,YACzC,KADL,cAECjC,EAAMkC,WAFP,kBAUxB,kBAACJ,EAAA,EAAD,CAAMZ,MAAOC,EAAOY,mBAApB,mBA3BS,WAEb,IADA,IACA,EADII,EAAM,EACV,IAAkB/C,KAAlB,aAAwB,CACpB+C,GADoB,QACPD,WAEjB,OAAOC,EAsBkDC,GAArD,UACA,kBAACC,EAAA,EAAD,CAAkBnB,MAAOC,EAAOmB,oBAC5B,kBAACR,EAAA,EAAD,CAAMZ,MAAOC,EAAOoB,eAApB,WAOhB,IAAMC,EAAQC,cAEC,SAASC,EAAKC,GACzB,OACI,kBAACH,EAAMI,UAAP,CAAiBC,aAAc,WAAYC,cAAe,CAAEC,iBAAkB,SAAUC,YAAa,CAAEC,gBAAiB,YAAeC,gBAAgB,UACnJ,kBAACV,EAAMW,OAAP,CAAchD,KAAK,WAAWiD,UAAW7C,KAKrD,IASMY,EAASkC,IAAWC,OAAO,CAC7B7B,aAAc,CACV8B,cAAe,OAEnB1B,gBAAiB,CACb2B,YAAa,GACbC,cAAe,GACfF,cAAe,UAEnBxB,kBAAmB,CACf2B,SAAU,GACVC,QAAS,GACTC,WAAY,OACZC,UAAW,OACXC,MAAO,SAEX9B,SAAU,CACN0B,SAAU,GACVG,UAAW,QAGfzC,OAAQ,CACJuC,QAAS,EACTV,gBAAiB,WAErBtB,MAAO,CACHoC,MAAO,IACPC,OAAQ,KAEZ1B,mBAAoB,CAChB2B,UAAW,EACXhB,gBAAiB,UACjBiB,aAAc,GACdC,gBAAiB,GACjBC,kBAAmB,IAEvB7B,cAAe,CACXmB,SAAU,GACVI,MAAO,OACPF,WAAY,OACZS,UAAW,SACXC,cAAe,e,yBC3GRC,EADK,WAAO,OAAOC,YAAY9E,ICC/B,SAAS+E,EAAT,GAAmC,IAExCC,EAFuC,EAAR/B,MAEXgC,OAAOD,YAC3BjE,EAAWC,cACjB,OACI,kBAACE,EAAA,EAAD,KACI,kBAACkB,EAAA,EAAD,CAAMZ,MAAOC,EAAOY,mBAApB,0BACA,kBAAClB,EAAA,EAAD,KACI+D,OAAOC,KAAKH,EAAYzE,QAAQa,KAAI,SAAAd,GAChC,OACI,kBAACe,EAAA,EAAD,CAAoBC,cAAe,UAAWC,cAAe,GAAKC,MAAOC,EAAOC,OAAQC,IAAKqD,EAAYzE,OAAOD,GAAOsB,GAAIC,QAAS,kBAAMd,EHD1I,SAAAT,GAAK,MAAK,CAC9B,KAAS,WACT,QAAYA,GGD2J8E,CAASJ,EAAYzE,OAAOD,OAC3K,kBAACY,EAAA,EAAD,CAAMM,MAAOC,EAAOM,cAChB,kBAACC,EAAA,EAAD,CAAOR,MAAOC,EAAOQ,MAAOC,OAAQ8C,EAAYzE,OAAOD,GAAO2B,QAC9D,kBAACf,EAAA,EAAD,CAAMM,MAAOC,EAAOU,iBAChB,kBAACC,EAAA,EAAD,CAAMZ,MAAOC,EAAOY,mBAAoB/B,GACxC,kBAAC8B,EAAA,EAAD,CAAMZ,MAAOC,EAAOa,UAApB,kBAAwC0C,EAAYzE,OAAOD,GAAOiC,YAC7D,KADL,cAECyC,EAAYzE,OAAOD,GAAOkC,WAF3B,mBAepC,IAAMf,EAASkC,IAAWC,OAAO,CAC7B7B,aAAc,CACVgC,cAAe,GACfF,cAAe,OAEnB1B,gBAAiB,CACb2B,YAAa,GACbC,cAAe,GACfF,cAAe,UAEnBxB,kBAAmB,CACf2B,SAAU,GACVE,WAAY,OACZC,UAAW,OACXC,MAAO,SAEX9B,SAAU,CACN0B,SAAU,GACVG,UAAW,QAGfzC,OAAQ,CACJuC,QAAS,GAEbhC,MAAO,CACHoC,MAAO,IACPC,OAAQ,OCzDD,SAASe,EAAT,GAAsC,IAAtBC,EAAqB,EAArBA,WAAqB,EAATrC,MACzC,OACE,kBAAC/B,EAAA,EAAD,CAAMM,MAAO,CAAE+D,KAAM,EAAGtB,QAAS,KAC/B,kBAAC9C,EAAA,EAAD,CAAYK,MAAOC,EAAO+D,WACxBN,OAAOC,KAAK9E,IAAae,KAAI,SAAA4D,GAC3B,OACE,kBAAC3D,EAAA,EAAD,CAAoBC,cAAe,UAAWC,cAAe,GAAKC,MAAOC,EAAOC,OAAQC,IAAKtB,GAAY2E,GAAapD,GAAIC,QAAS,kBAAMyD,EAAWG,KAAK,SAAU,CAAET,YAAa3E,GAAY2E,OAC5L,kBAAC9D,EAAA,EAAD,CAAMM,MAAOC,EAAOuD,aAClB,kBAAChD,EAAA,EAAD,CAAOE,OAAQ7B,GAAY2E,GAAa/C,MAAOT,MAAOC,EAAOQ,QAC7D,kBAACf,EAAA,EAAD,CAAMM,MAAO,CAAE+D,KAAM,EAAG1B,cAAe,SAAU6B,eAAgB,aAAcC,WAAY,WACzF,kBAACvD,EAAA,EAAD,CAAMZ,MAAOC,EAAOmE,UAAWZ,GAC/B,kBAAC5C,EAAA,EAAD,CAAMZ,MAAOC,EAAOoE,KAAMxF,GAAY2E,GAAac,WAAYzF,GAAY2E,GAAae,KAAK3E,KAAI,SAAA4E,GAAG,MAAI,WAAQA,cAYlI,IAAMvE,EAASkC,IAAWC,OAAO,CAC/B4B,UAAW,CACTzB,cAAe,IAEjBiB,YAAa,CACXnB,cAAe,MACfE,cAAe,IAEjB6B,SAAU,CACR5B,SAAU,GACVE,WAAY,OACZC,UAAW,UAEb0B,IAAK,CACH7B,SAAU,GACVC,QAAS,EACTE,UAAW,OACXuB,eAAgB,cAElBhE,OAAQ,CACNuC,QAAS,GAEXhC,MAAO,CACLoC,MAAO,IACPC,OAAQ,OCzCNxB,EAAQC,cACC,SAASkD,EAAiBhD,GACvC,IAAI+B,EAAc,GAIlB,OAHAkB,QAAQC,IAAIlD,GACTA,EAAMgC,SACPD,EAAc/B,EAAMgC,OAAOD,aAEzB,kBAAC,EAAM9B,UAAP,CAAiBC,aAAc,eAAgBC,cAAe,CAACC,iBAAkB,SAAWC,YAAY,CAACC,gBAAgB,YAAaC,gBAAgB,UACpJ,kBAAC,EAAMC,OAAP,CAAchD,KAAK,eAAeiD,UAAW0C,IAC7C,kBAAC,EAAM3C,OAAP,CAAchD,KAAK,SAASiD,UAAW2C,EAAkBC,cAAe,CAACtB,YAAaA,MAS/ErB,IAAWC,OAAO,CAC/B3B,MAAO,CACLqC,OAAQ,OAFZ,I,SCxBe,SAASe,EAAT,GAAsC,IAAtBC,EAAqB,EAArBA,WAAqB,EAATrC,MACvC,OACI,kBAAC9B,EAAA,EAAD,KACI,kBAACD,EAAA,EAAD,CAAMM,MAAO,CAAEqC,cAAe,SAAU0B,KAAM,EAAGtB,QAAS,KACtD,kBAAC7B,EAAA,EAAD,CAAMZ,MAAOC,EAAOY,mBAApB,cAGA,kBAAClB,EAAA,EAAD,CAAYK,MAAO,CAAEqC,cAAe,MAAO0B,KAAM,GAAKgB,YAAU,GAC5DrB,OAAOC,KAAKqB,IAAQpF,KAAI,SAAC4D,GACrB,OACI,kBAAC9D,EAAA,EAAD,CAAMM,MAAOC,EAAOgF,mBAChB,kBAACpF,EAAA,EAAD,CAAoBC,cAAc,SAASC,cAAe,GAAKC,MAAOC,EAAOC,OAAQC,IAAK6E,GAAOxB,GAAapD,GAAIC,QAAS,cACvH,kBAACX,EAAA,EAAD,CAAMS,IAAK6E,GAAOxB,GAAapD,GAAIJ,MAAOC,EAAOgF,mBAC7C,kBAACvF,EAAA,EAAD,CAAMM,MAAO,CAAEqC,cAAe,WAC1B,kBAAC7B,EAAA,EAAD,CAAOE,OAAQsE,GAAOxB,GAAa/C,MAAOT,MAAOC,EAAOQ,QACxD,kBAACG,EAAA,EAAD,CAAMZ,MAAOC,EAAOiF,mBAAoB1B,GACxC,kBAAC5C,EAAA,EAAD,CAAMZ,MAAOC,EAAOkF,mBAAoBH,GAAOxB,GAAa4B,eAQxF,kBAACxE,EAAA,EAAD,CAAMZ,MAAOC,EAAOY,mBAApB,2BAGA,kBAAClB,EAAA,EAAD,CAAYK,MAAO,CAAEqC,cAAe,MAAO0B,KAAM,GAAKgB,YAAU,GAC5DrB,OAAOC,KAAK9E,IAAae,KAAI,SAAC4D,GAC1B,OACI,kBAAC9D,EAAA,EAAD,CAAMM,MAAOC,EAAOgF,mBAChB,kBAACpF,EAAA,EAAD,CAAoBC,cAAc,SAASC,cAAe,GAAKC,MAAOC,EAAOC,OAAQC,IAAKtB,GAAY2E,GAAapD,GAAIC,QAAS,kBAAMyD,EAAWG,KAAK,SAAU,CAAET,YAAa3E,GAAY2E,OACvL,kBAAC9D,EAAA,EAAD,CAAMS,IAAKtB,GAAY2E,GAAapD,GAAIJ,MAAOC,EAAOgF,mBAClD,kBAACvF,EAAA,EAAD,CAAMM,MAAO,CAAEqC,cAAe,WAC1B,kBAAC7B,EAAA,EAAD,CAAOE,OAAQ7B,GAAY2E,GAAa/C,MAAOT,MAAOC,EAAOQ,QAC7D,kBAACG,EAAA,EAAD,CAAMZ,MAAOC,EAAOiF,mBAAoB1B,WAQpE,kBAAC5C,EAAA,EAAD,CAAMZ,MAAOC,EAAOY,kBAChBR,QAAS,kBAAMgF,IAAQC,QAAQ,2CADnC,0BAYhB,IAAMrF,EAASkC,IAAWC,OAAO,CAC7B6C,kBAAmB,CACf5C,cAAe,SACfI,QAAS,EACTI,MAAO,IACPC,OAAQ,KAEZrC,MAAO,CACHoC,MAAO,IACPC,OAAQ,KAEZoC,kBAAmB,CACf1C,SAAU,GACVE,WAAY,OACZC,UAAW,UAEfwC,kBAAmB,CACf3C,SAAU,GACVG,UAAW,UAEf9B,kBAAmB,CACf2B,SAAU,GACVE,WAAY,OACZC,UAAW,OACXC,MAAO,SAEX1C,OAAQ,CACJuC,QAAS,EACTK,OAAQ,OClFVxB,EAAQC,cACC,SAASgE,EAAT,GAA4B,EAAR9D,MACjC,OACI,kBAAC,EAAMC,UAAP,CAAiBC,aAAc,OAAQC,cAAe,CAACC,iBAAkB,SAAUC,YAAY,CAACC,gBAAgB,YAAcC,gBAAgB,UAC5I,kBAAC,EAAMC,OAAP,CAAchD,KAAK,OAAOiD,UAAWsD,IACrC,kBAAC,EAAMvD,OAAP,CAAchD,KAAK,SAASiD,UAAW2C,KCI/C,IAAIY,EAAYrG,EAAQ,KACpBsG,EAAetG,EAAQ,KACvBuG,EAAevG,EAAQ,KACvBwG,EAAexG,EAAQ,KACvByG,EAAiBzG,EAAQ,KACzB0G,EAAc1G,EAAQ,KACtB2G,GAAe3G,EAAQ,KACvB4G,GAAkB5G,EAAQ,KAC1B6G,GAAgB7G,EAAQ,KACxB8G,GAAgB9G,EAAQ,KACxB+G,GAAgB/G,EAAQ,KAEf4F,GAAS,CACpB,0BAAqB,CACnB,KAAQ,0BACR,MAAS,0CACT,GAAM,EACN,MAASS,GAEX,6BAAwB,CACtB,KAAQ,6BACR,MAAS,0CACT,GAAM,EACN,MAASC,IAKA7G,GAAc,CACzB,UAAa,CACX,KAAQ,YACR,GAAM,EACN,WAAc,SACd,QAAW,oDACX,KAAQ,CAAC,QAAS,UAAW,aAC7B,OAAU,CACR,4BAA6B,CAC3B,KAAQ,4BACR,GAAM,EACN,WAAS,EACT,YAAU,CAAC,mBACX,MAASmH,IAEX,iCAA+B,CAC7B,KAAQ,iCACR,GAAM,EACN,WAAS,IACT,eAAU,GACV,MAASF,GAEX,sBAAuB,CACrB,KAAQ,sBACR,GAAM,EACN,WAAS,IACT,eAAU,GACV,MAASC,KAIb,MAASJ,GAEX,oCAAqC,CACnC,KAAQ,oCACR,GAAM,EACN,WAAc,SACd,QAAW,4CACX,KAAQ,CAAC,QAAS,UAAW,UAAW,aACxC,OAAU,CACR,kBAAmB,CACjB,KAAQ,kBACR,GAAM,EACN,WAAS,EACT,YAAU,CAAC,kBACX,MAASC,IAGb,MAASA,GAEX,WAAY,CACV,KAAQ,WACR,GAAM,EACN,WAAc,SACd,QAAW,gDACX,KAAQ,CAAC,QAAS,UAAV,CAAuB,aAC/B,OAAU,CACR,cAAe,CACb,KAAQ,cACR,GAAM,EACN,WAAS,IACT,YAAU,CAAC,aACX,MAASK,IAGX,qBAAsB,CACpB,KAAQ,qBACR,GAAM,EACN,WAAS,KACT,YAAU,CAAC,iBACX,MAASE,IAGX,qBAAsB,CACpB,KAAQ,qBACR,GAAM,EACN,WAAS,KACT,YAAU,CAAC,wBACX,MAASD,KAGb,MAASL,IAIPO,GAAQ/C,IAGC,SAASgD,GAAI5E,GAC1B,OACE,kBAAC,IAAD,CAAU2E,MAAOA,IACf,kBAACE,GAAD,OAMC,SAASC,GAAT,GAA8B,EAAbzC,WAGtB,OADA0C,cACO,qCAIT,IAAMC,GAAMC,cAEZ,SAASJ,KAGP,OAFiB9G,aACjBD,CAASlB,GAAU,IAEjB,kBAACsI,EAAA,EAAD,CAAqBC,aAAa,GAChC,kBAACH,GAAI/E,UAAL,CAAemF,iBAAiB,OAAOjF,cAAe,gBAAGH,EAAH,EAAGA,MAAH,MAAgB,CACpEqF,WAAY,YAA8B,EAA3BC,QAA4B,IACrCC,EADkBpE,EAAkB,EAAlBA,MAAOqE,EAAW,EAAXA,KAE7B,GAAmB,SAAfxF,EAAMxC,KACR+H,EAAW,gBACN,GAAmB,iBAAfvF,EAAMxC,KACf+H,EAAW,qBAER,IAAkB,aAAfvF,EAAMxC,KAGZ,OAAO,kBAAC,IAAD,CAAOA,KAAM,SAAUgI,KAAMA,EAAMrE,MAAOA,IAFjDoE,EAAW,UAKb,OAAO,kBAAC,IAAD,CAAM/H,KAAM+H,EAAUC,KAAMA,EAAMrE,MAAOA,OAGlDsE,cAAe,CACbC,gBAAiB,SACjBC,kBAAmB,SAErB,kBAACX,GAAIxE,OAAL,CAAYhD,KAAK,eAAeiD,UAAWuC,IAC3C,kBAACgC,GAAIxE,OAAL,CAAYhD,KAAK,OAAOiD,UAAWqD,IACnC,kBAACkB,GAAIxE,OAAL,CAAYhD,KAAK,WAAWiD,UAAWV,IACvC,kBAACiF,GAAIxE,OAAL,CAAYhD,KAAK,SAASiD,UAAWqE,OC7K9B,SAAShD,GAAT,GAAmC,IAExCC,EAFuC,EAAR/B,MAEXgC,OAAOD,YAAYA,YAC7C,OACI,kBAAC9D,EAAA,EAAD,KACI,kBAACkB,EAAA,EAAD,CAAMZ,MAAOC,GAAOY,mBAApB,4BACA,kBAAClB,EAAA,EAAD,KACI+D,OAAOC,KAAK9E,GAAY2E,GAAazE,QAAQa,KAAI,SAAAd,GAC7C,OACI,kBAACe,EAAA,EAAD,CAAoBC,cAAe,UAAWC,cAAe,GAAKC,MAAOC,GAAOC,OAAQC,IAAKtB,GAAY2E,GAAazE,OAAOD,GAAOsB,GAAIC,QAAS,cAC7I,kBAACX,EAAA,EAAD,CAAMM,MAAOC,GAAOM,cAChB,kBAACC,EAAA,EAAD,CAAOR,MAAOC,GAAOQ,MAAOC,OAAQ7B,GAAY2E,GAAazE,OAAOD,GAAO2B,QAC3E,kBAACf,EAAA,EAAD,CAAMM,MAAOC,GAAOU,iBAChB,kBAACC,EAAA,EAAD,CAAMZ,MAAOC,GAAOY,mBAAoB/B,GACxC,kBAAC8B,EAAA,EAAD,CAAMZ,MAAOC,GAAOa,UAApB,kBAAwCjC,GAAY2E,GAAazE,OAAOD,GAAOiC,YAC1E,KADL,cAEClC,GAAY2E,GAAazE,OAAOD,GAAOkC,WAFxC,mBAepC,IAAMf,GAASkC,IAAWC,OAAO,CAC7B7B,aAAc,CACVgC,cAAe,GACfF,cAAe,OAEnB1B,gBAAiB,CACb2B,YAAa,GACbC,cAAe,GACfF,cAAe,UAEnBxB,kBAAmB,CACf2B,SAAU,GACVE,WAAY,OACZC,UAAW,OACXC,MAAO,SAEX9B,SAAU,CACN0B,SAAU,GACVG,UAAW,QAGfzC,OAAQ,CACJuC,QAAS,GAEbhC,MAAO,CACHoC,MAAO,IACPC,OAAQ,OCvDVxB,GAAQC,cACC,SAAS8F,GAAT,GAA+B,IAAT5F,EAAQ,EAARA,MAC7B+B,EAAc,GAIlB,OAHI/B,EAAMgC,SACND,EAAc/B,EAAMgC,OAAOD,aAG3B,kBAAC,GAAM9B,UAAP,CAAiBC,aAAc,SAAUC,cAAe,CAAEC,iBAAkB,SAAUC,YAAa,CAAEC,gBAAiB,YAAcC,gBAAiB,UACjJ,kBAAC,GAAMC,OAAP,CAAchD,KAAK,SAASiD,UAAWnD,GAAQ+F,cAAetB,EAAc,CAAEA,kBCN3E,SAAS8D,GAAT,GAA4B,IAAV7F,EAAS,EAATA,MAE7BiD,QAAQC,IAAIlD,GACZ,IAAM+B,EAAc/B,EAAMgC,OAAOD,YAAYA,YAAYA,YACzD,OACI,kBAAC9D,EAAA,EAAD,KACI,kBAACkB,EAAA,EAAD,CAAMZ,MAAOC,GAAOY,mBAApB,mBACA,kBAAClB,EAAA,EAAD,KACI+D,OAAOC,KAAK9E,GAAY2E,GAAazE,QAAQa,KAAI,SAAAd,GAC7C,OACI,kBAACY,EAAA,EAAD,CAAMM,MAAOC,GAAOC,OAAQC,IAAKtB,GAAY2E,GAAazE,OAAOD,GAAOsB,IACpE,kBAACV,EAAA,EAAD,CAAMM,MAAOC,GAAOM,cAChB,kBAACC,EAAA,EAAD,CAAOR,MAAOC,GAAOQ,MAAOC,OAAQ7B,GAAY2E,GAAazE,OAAOD,GAAO2B,QAC3E,kBAACf,EAAA,EAAD,CAAMM,MAAOC,GAAOU,iBAChB,kBAACC,EAAA,EAAD,CAAMZ,MAAOC,GAAOY,mBAAoB/B,GACxC,kBAAC8B,EAAA,EAAD,CAAMZ,MAAOC,GAAOa,UAApB,kBAAwCjC,GAAY2E,GAAazE,OAAOD,GAAOiC,YAC1E,KADL,cAEKlC,GAAY2E,GAAazE,OAAOD,GAAOkC,WAF5C,WAGA,kBAACtB,EAAA,EAAD,CAAMM,MAAOC,GAAOM,cAChB,kBAACV,EAAA,EAAD,CAAoBC,cAAe,UAAWC,cAAe,GAAKC,MAAOC,GAAOC,OAAQG,QAAS,cAC7F,kBAAC,IAAD,CAAOpB,KAAK,aAAagI,KAAM,GAAIjH,MAAO,CAAEuH,iBAAkB,EAAGC,iBAAkB,oBAEvF,kBAAC3H,EAAA,EAAD,CAAoBC,cAAe,UAAWC,cAAe,GAAKC,MAAOC,GAAOC,OAASG,QAAS,cAC9F,kBAAC,IAAD,CAAOpB,KAAK,SAASgI,KAAM,eAevE,IAAMhH,GAASkC,IAAWC,OAAO,CAC7B7B,aAAc,CACVgC,cAAe,GACfF,cAAe,OAEnB1B,gBAAiB,CACb2B,YAAa,GACbC,cAAe,GACfF,cAAe,UAEnBxB,kBAAmB,CACf2B,SAAU,GACVE,WAAY,OACZC,UAAW,OACXC,MAAO,SAEX9B,SAAU,CACN0B,SAAU,GACVG,UAAW,QAGfzC,OAAQ,CACJuC,QAAS,GAEbhC,MAAO,CACHoC,MAAO,IACPC,OAAQ,OClEVxB,GAAQC,cACC,SAAS8F,GAAT,GAA+B,IAAT5F,EAAQ,EAARA,MAC7B+B,EAAc,GAIlB,OAHI/B,EAAMgC,SACND,EAAc/B,EAAMgC,OAAOD,aAG3B,kBAAC,GAAM9B,UAAP,CAAiBC,aAAc,SAAUC,cAAe,CAAEC,iBAAkB,SAAUC,YAAa,CAAEC,gBAAiB,YAAcC,gBAAiB,UACjJ,kBAAC,GAAMC,OAAP,CAAchD,KAAK,UAAUiD,UAAWoF,GAAQxC,cAAetB,EAAc,CAAEA,kBCC3F,IAAImC,GAAevG,EAAQ,KACvBwG,GAAexG,EAAQ,KACvByG,GAAiBzG,EAAQ,KACzB0G,GAAc1G,EAAQ,KACtB2G,GAAe3G,EAAQ,KACvB4G,GAAkB5G,EAAQ,KAC1B6G,GAAgB7G,EAAQ,KACxB8G,GAAgB9G,EAAQ,KAGfP,GAAc,CACzB,UAAa,CACX,KAAQ,YACR,GAAM,EACN,WAAc,SACd,QAAW,oDACX,KAAQ,CAAC,QAAS,UAAW,aAC7B,OAAU,CACR,4BAA6B,CAC3B,KAAQ,4BACR,GAAM,EACN,WAAS,EACT,YAAU,CAAC,mBACX,MAASmH,IAEX,iCAA+B,CAC7B,KAAQ,iCACR,GAAM,EACN,WAAS,IACT,eAAU,GACV,MAASF,IAEX,sBAAuB,CACrB,KAAQ,sBACR,GAAM,EACN,WAAS,IACT,eAAU,GACV,MAASC,KAIb,MAASJ,IAEX,oCAAqC,CACnC,KAAQ,oCACR,GAAM,EACN,WAAc,SACd,QAAW,4CACX,KAAQ,CAAC,QAAS,UAAW,UAAW,aACxC,OAAU,CACR,kBAAmB,CACjB,KAAQ,kBACR,GAAM,EACN,WAAS,EACT,YAAU,CAAC,kBACX,MAASC,KAGb,MAASA,IAEX,WAAY,CACV,KAAQ,WACR,GAAM,EACN,WAAc,SACd,QAAW,gDACX,KAAQ,CAAC,QAAS,UAAV,CAAuB,aAC/B,OAAU,CACR,cAAe,CACb,KAAQ,cACR,GAAM,EACN,WAAS,IACT,YAAU,CAAC,aACX,MAASK,IAGX,qBAAsB,CACpB,KAAQ,qBACR,GAAM,EACN,WAAS,KACT,YAAU,CAAC,iBACX,MAxEY7G,EAAQ,MA2EtB,qBAAsB,CACpB,KAAQ,qBACR,GAAM,EACN,WAAS,KACT,YAAU,CAAC,wBACX,MAAS8G,KAGb,MAASL,KAKPO,GAAQ/C,IAGC,SAASoE,GAAUhG,GAChC,OACE,kBAAC,IAAD,CAAU2E,MAAOA,IACf,kBAAC,GAAD,CAAK5C,YAAa/B,EAAM+B,eAK9B,IAAMiD,GAAMC,cAEZ,SAASL,GAAT,GAA6B,IAAf7C,EAAc,EAAdA,YAGZ,OAFiBhE,aACjBD,CAASlB,GAAU,IAEjB,kBAACsI,EAAA,EAAD,CAAqBC,aAAa,GAChC,kBAAC,GAAIlF,UAAL,CAAemF,iBAAiB,cAAcjF,cAAe,gBAAGH,EAAH,EAAGA,MAAH,MAAgB,CAC3EqF,WAAY,YAA8B,EAA3BC,QAA4B,IAAnBnE,EAAkB,EAAlBA,MAAOqE,EAAW,EAAXA,KAE7B,MAAmB,gBAAfxF,EAAMxC,KACD,kBAAC,IAAD,CAAMA,KAAM,iBAAkBgI,KAAMA,EAAMrE,MAAOA,IAElC,YAAfnB,EAAMxC,KACN,kBAAC,IAAD,CAAOA,KAAM,OAAQgI,KAAMA,EAAMrE,MAAOA,IAExC,kBAAC,IAAD,CAAO3D,KAAM,SAAUgI,KAAMA,EAAMrE,MAAOA,OAGrDsE,cAAe,CACbC,gBAAiB,SACjBC,kBAAmB,SAErB,kBAAC,GAAInF,OAAL,CAAYhD,KAAK,cAAciD,UAAWwF,GAAkB5C,cAAetB,EAAY,CAACA,iBACxF,kBAAC,GAAIvB,OAAL,CAAYhD,KAAK,UAAUiD,UAAWyF,GAAa7C,cAAetB,EAAY,CAACA,iBAC/E,kBAAC,GAAIvB,OAAL,CAAYhD,KAAK,SAASiD,UAAWqE,OAMtC,SAASA,GAAT,GAA8B,EAAbzC,WAGtB,OADA0C,cACO,qC,cCpJM,SAASc,GAAT,GAA4B,IAAV7F,EAAS,EAATA,MAE7BiD,QAAQC,IAAIlD,GACZ,IAAMmG,EAAWnG,EAAMgC,OAAOmE,SAC9B,OACI,kBAAClI,EAAA,EAAD,KACI,kBAACkB,EAAA,EAAD,CAAMZ,MAAOC,GAAOY,mBAApB,mBACA,kBAAClB,EAAA,EAAD,KACIiI,EAASC,QAAQjI,KAAI,SAAAkI,GACjB,OACI,kBAACpI,EAAA,EAAD,CAAMM,MAAOC,GAAOC,OAAQC,IAAK2H,EAAO1H,IACpC,kBAACV,EAAA,EAAD,CAAMM,MAAOC,GAAOM,cAChB,kBAACC,EAAA,EAAD,CAAOR,MAAOC,GAAOQ,MAAOC,OAAQ7B,GAAYiJ,EAAOtE,aAAa/C,QACpE,kBAACf,EAAA,EAAD,CAAMM,MAAOC,GAAOU,iBAChB,kBAACC,EAAA,EAAD,CAAMZ,MAAOC,GAAOY,mBAAoBiH,EAAOtE,aAC/C,kBAAC5C,EAAA,EAAD,CAAMZ,MAAOC,GAAOa,UAAWgH,EAAOhJ,MACjC,KADL,YAEcgJ,EAAOC,QACrB,kBAACrI,EAAA,EAAD,CAAMM,MAAOC,GAAOM,cAChB,kBAACV,EAAA,EAAD,CAAoBC,cAAe,UAAWC,cAAe,GAAKC,MAAOC,GAAOC,OAAQG,QAAS,cAC7F,kBAAC,IAAD,CAAOpB,KAAK,aAAagI,KAAM,GAAIjH,MAAO,MAE9C,kBAACH,EAAA,EAAD,CAAoBC,cAAe,UAAWC,cAAe,GAAKC,MAAOC,GAAOC,OAASG,QAAS,cAC9F,kBAAC,IAAD,CAAOpB,KAAK,SAASgI,KAAM,eAevE,IAAMhH,GAASkC,IAAWC,OAAO,CAC7B7B,aAAc,CACVgC,cAAe,GACfF,cAAe,OAEnB1B,gBAAiB,CACb2B,YAAa,GACbC,cAAe,GACfF,cAAe,UAEnBxB,kBAAmB,CACf2B,SAAU,GACVE,WAAY,OACZC,UAAW,OACXC,MAAO,SAEX9B,SAAU,CACN0B,SAAU,GACVG,UAAW,QAGfzC,OAAQ,CACJuC,QAAS,EACTO,aAAc,IAElBvC,MAAO,CACHoC,MAAO,IACPC,OAAQ,OCnEVxB,GAAQC,cACC,SAAS8F,GAAT,GAA+B,IAAT5F,EAAQ,EAARA,MAC7BmG,EAAW,GAIf,OAHInG,EAAMgC,SACNmE,EAAWnG,EAAMgC,OAAOmE,UAGxB,kBAAC,GAAMlG,UAAP,CAAiBC,aAAc,SAAUC,cAAe,CAAEC,iBAAkB,SAAUC,YAAa,CAAEC,gBAAiB,YAAcC,gBAAiB,UACjJ,kBAAC,GAAMC,OAAP,CAAchD,KAAK,UAAUiD,UAAWoF,GAAQxC,cAAe8C,EAAW,CAAEA,e,u6BCPzE,SAASI,GAAT,GAA8B,IAAVvG,EAAS,EAATA,MAE/BiD,QAAQC,IAAIlD,GACZ,IAAMmG,EAAWnG,EAAMgC,OAAOmE,SAWxBK,EAViB,WAGnB,IAFA,IAEA,EAFIhH,EAAM,EACNiH,EAAQ,EACZ,KAAqBN,EAASO,YAA9B,aAAwC,CAAC,IAAhCA,EAA+B,QACpCzD,QAAQC,IAAIwD,GACZlH,GAAOkH,EAASC,OAChBF,GAAS,EAEb,OAAQ,EAAMjH,EAAMiH,EAEPG,GAEjB,OADA3D,QAAQC,IAAIsD,GAER,kBAACvI,EAAA,EAAD,KACI,kBAACkB,EAAA,EAAD,CAAMZ,MAAOC,GAAOY,mBAApB,0BACA,kBAAClB,EAAA,EAAD,KACIiI,EAASO,SAASvI,KAAI,SAAAkI,GAClB,OACI,kBAACpI,EAAA,EAAD,CAAMM,MAAOC,GAAOC,OAAQC,IAAK2H,EAAO1H,IACpC,kBAACV,EAAA,EAAD,CAAMM,MAAOC,GAAOM,cAChB,kBAACC,EAAA,EAAD,CAAOR,MAAOC,GAAOQ,MAAOC,OAAQ7B,GAAYiJ,EAAOtE,aAAa/C,QACpE,kBAACf,EAAA,EAAD,CAAMM,MAAOC,GAAOU,iBAChB,kBAACC,EAAA,EAAD,CAAMZ,MAAOC,GAAOY,mBAAoBiH,EAAOtE,aAC/C,kBAAC5C,EAAA,EAAD,CAAMZ,MAAOC,GAAOa,UAApB,UACC,KADD,KAEA,kBAAC,KAAD,CACInC,KAAK,OACL2J,UAAQ,EACRC,cAAeT,EAAOM,OACtBI,UAAU,mBACVxI,MAAOC,GAAOmI,OACdK,UAAW,WAQnC,kBAAC/I,EAAA,EAAD,KACI,kBAACkB,EAAA,EAAD,CAAMZ,MAAOC,GAAOY,mBAApB,oBACA,kBAACnB,EAAA,EAAD,CAAMM,MAAOC,GAAOM,cAChB,kBAAC,KAAD,CACI5B,KAAK,OACL2J,UAAQ,EACRE,UAAU,mBACVD,cAAeN,IAEnB,kBAACrH,EAAA,EAAD,CAAMZ,MAAO,CACTwC,SAAU,GACVE,WAAY,OACZC,UAAW,OACXC,MAAO,QACPO,UAAW,WACX8E,EAASS,QAAQ,GANrB,WAgBxB,IAAMzI,GAASkC,IAAWC,OAAO,CAC7B7B,aAAc,CACVgC,cAAe,GACfF,cAAe,OAEnB1B,gBAAiB,CACb2B,YAAa,GACbC,cAAe,GACfF,cAAe,UAEnBxB,kBAAmB,CACf2B,SAAU,GACVE,WAAY,OACZC,UAAW,OACXC,MAAO,SAEX9B,SAAU,CACN0B,SAAU,GACVG,UAAW,QAGfzC,OAAQ,CACJuC,QAAS,EACTO,aAAc,IAElBvC,MAAO,CACHoC,MAAO,IACPC,OAAQ,KAEZsF,OAAQ,CACJb,iBAAkB,IAClBC,iBAAkB,mBCpGpBlG,GAAQC,cACC,SAAS8F,GAAT,GAA+B,IAAT5F,EAAQ,EAARA,MAC7BmG,EAAW,GAIf,OAHInG,EAAMgC,SACNmE,EAAWnG,EAAMgC,OAAOmE,UAGxB,kBAAC,GAAMlG,UAAP,CAAiBC,aAAc,WAAYC,cAAe,CAAEC,iBAAkB,SAAUC,YAAa,CAAEC,gBAAiB,YAAcC,gBAAiB,UACnJ,kBAAC,GAAMC,OAAP,CAAchD,KAAK,WAAWiD,UAAW8F,GAAUlD,cAAe8C,KCE9E,IAAIjC,GAAevG,EAAQ,KACvBwG,GAAexG,EAAQ,KACvByG,GAAiBzG,EAAQ,KACzB0G,GAAc1G,EAAQ,KACtB2G,GAAe3G,EAAQ,KACvB4G,GAAkB5G,EAAQ,KAC1B6G,GAAgB7G,EAAQ,KACxB8G,GAAgB9G,EAAQ,KAGfP,GAAc,CACzB,UAAa,CACX,KAAQ,YACR,GAAM,EACN,WAAc,SACd,QAAW,oDACX,KAAQ,CAAC,QAAS,UAAW,aAC7B,OAAU,CACR,4BAA6B,CAC3B,KAAQ,4BACR,GAAM,EACN,WAAS,EACT,YAAU,CAAC,mBACX,MAASmH,IAEX,iCAA+B,CAC7B,KAAQ,iCACR,GAAM,EACN,WAAS,IACT,eAAU,GACV,MAASF,IAEX,sBAAuB,CACrB,KAAQ,sBACR,GAAM,EACN,WAAS,IACT,eAAU,GACV,MAASC,KAIb,MAASJ,IAEX,oCAAqC,CACnC,KAAQ,oCACR,GAAM,EACN,WAAc,SACd,QAAW,4CACX,KAAQ,CAAC,QAAS,UAAW,UAAW,aACxC,OAAU,CACR,kBAAmB,CACjB,KAAQ,kBACR,GAAM,EACN,WAAS,EACT,YAAU,CAAC,kBACX,MAASC,KAGb,MAASA,IAEX,WAAY,CACV,KAAQ,WACR,GAAM,EACN,WAAc,SACd,QAAW,gDACX,KAAQ,CAAC,QAAS,UAAV,CAAuB,aAC/B,OAAU,CACR,cAAe,CACb,KAAQ,cACR,GAAM,EACN,WAAS,IACT,YAAU,CAAC,aACX,MAASK,IAGX,qBAAsB,CACpB,KAAQ,qBACR,GAAM,EACN,WAAS,KACT,YAAU,CAAC,iBACX,MAxEY7G,EAAQ,MA2EtB,qBAAsB,CACpB,KAAQ,qBACR,GAAM,EACN,WAAS,KACT,YAAU,CAAC,wBACX,MAAS8G,KAGb,MAASL,KAMPO,GAAQ/C,IAGC,SAASoE,GAAUhG,GAChC,OACE,kBAAC,IAAD,CAAU2E,MAAOA,IACf,kBAAC,GAAD,CAAK5C,YAAa/B,KAKxB,IAAMgF,GAAMC,cAEZ,SAASL,GAAT,GAA6B,IAAf7C,EAAc,EAAdA,YACNjE,EAAWC,cACboI,EAAWpE,EAAYoE,SAE3B,OADArI,EAASlB,GAAU,IAEjB,kBAACsI,EAAA,EAAD,CAAqBC,aAAa,GAChC,kBAAC,GAAIlF,UAAL,CAAemF,iBAAiB,UAAUjF,cAAe,gBAAGH,EAAH,EAAGA,MAAH,MAAgB,CAEvEqF,WAAY,YAA8B,EAA3BC,QAA4B,IAAnBnE,EAAkB,EAAlBA,MAAOqE,EAAW,EAAXA,KAC7B,MAAmB,YAAfxF,EAAMxC,KACD,kBAAC,IAAD,CAAOA,KAAM,iBAAkBgI,KAAMA,EAAMrE,MAAOA,IAEnC,aAAfnB,EAAMxC,KACN,kBAAC,KAAD,CAAOA,KAAM,WAAYgI,KAAMA,EAAMrE,MAAOA,IAG5C,kBAAC,IAAD,CAAO3D,KAAM,SAAUgI,KAAMA,EAAMrE,MAAOA,OAIrDsE,cAAe,CACbC,gBAAiB,SACjBC,kBAAmB,SAErB,kBAAC,GAAInF,OAAL,CAAYhD,KAAK,UAAUiD,UAAWyF,GAAa7C,cAAe8C,EAAS,CAACA,cAC5E,kBAAC,GAAI3F,OAAL,CAAYhD,KAAK,WAAWiD,UAAWyG,GAAe7D,cAAe8C,EAAS,CAACA,cAC/E,kBAAC,GAAI3F,OAAL,CAAYhD,KAAK,SAASiD,UAAWqE,OAOtC,SAASA,GAAT,GAA8B,EAAbzC,WAGtB,OADA0C,cACO,qCCrJT,IAAMoC,GAAQ,CACV,QAAW,CACP,KAAQ,UACR,SAAY,WAEhB,YAAe,CACX,KAAQ,cACR,SAAY,cACZ,YAAe,aAEnB,SAAY,CACR,KAAQ,WACR,SAAY,WACZ,SAAY,CACR,CACI,GAAM,EACN,YAAe,YACf,OAAU,GAEd,CACI,GAAM,EACN,YAAe,WACf,OAAU,GAEd,CACI,GAAM,EACN,YAAe,oCACf,OAAU,IAGlB,QAAW,CACP,CACI,GAAM,EACN,YAAe,WACf,MAAS,qBACT,OAAU,gCAGd,CACI,GAAM,EACN,YAAe,YACf,MAAS,4BACT,OAAU,gCAEd,CACI,GAAM,EACN,YAAe,oCACf,MAAS,kBACT,OAAU,iCAKpBxC,GAAQ/C,IAEC,SAASoE,GAAUhG,GAC9B,OACI,kBAAC,IAAD,CAAU2E,MAAOA,IACb,kBAAC,GAAD,OAOG7E,cAEf,SAAS+E,KAAc,IAAD,EACMuC,mBAAS,IADf,WACXC,EADW,KACLC,EADK,OAEgBF,oBAAS,GAFzB,WAEXG,EAFW,KAEAC,EAFA,OAGwBJ,oBAAS,GAHjC,WAGXK,EAHW,KAGIC,EAHJ,OAIkBN,oBAAS,GAJ3B,WAIXO,EAJW,KAICC,EAJD,KAKdC,EAASlD,GAAMmD,WAEnB,OADAD,EAASA,EAAO9K,YAAYJ,SACpB,oCACHkL,GACG,oCACKN,GACG,kBAAC,GAAD,CAAYQ,aAAW,IAE1BN,GACG,kBAAC,GAAD,CAAgB1F,YAAaoF,GAAME,GAAOU,aAAW,IAExDJ,GACG,kBAAC,GAAD,CAAaxB,SAAUgB,GAAME,GAAOU,aAAW,MAIzDF,GACE,kBAACG,GAAD,CAAOX,KAAMA,EAAMC,QAASA,EAASE,aAAcA,EAAcE,iBAAkBA,EAAkBE,cAAeA,KAKhI,SAASI,GAAT,GAA0G,EAAzF3F,WAAyF,EAA7E0F,YAA8E,IAAjEP,EAAgE,EAAhEA,aAAcE,EAAkD,EAAlDA,iBAAkBE,EAAgC,EAAhCA,cAAeP,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QAAW,EACtEF,mBAAS,IAD6D,WACrFa,GADqF,WAEhGnK,EAAWC,cAEjB,OACI,kBAACE,EAAA,EAAD,CAAMM,MAAOC,GAAO+D,WAChB,kBAACpD,EAAA,EAAD,CAAMZ,MAAOC,GAAO0J,OAApB,aACA,kBAACjK,EAAA,EAAD,CAAMM,MAAOC,GAAO2J,gBAChB,kBAAClK,EAAA,EAAD,CAAMM,MAAOC,GAAO4J,WAChB,kBAACC,EAAA,EAAD,CAAWC,YAAY,WAAW/J,MAAOC,GAAO+J,MAAOC,aAAc,SAAA7F,GAAQ,OAAI2E,EAAQ3E,OAE7F,kBAAC1E,EAAA,EAAD,CAAMM,MAAOC,GAAO4J,WAChB,kBAACC,EAAA,EAAD,CAAWC,YAAY,WAAW/J,MAAOC,GAAO+J,MAAOC,aAAc,SAAAC,GAAI,OAAIR,EAAYQ,IAAOC,iBAAe,KAEnH,kBAACzK,EAAA,EAAD,CAAMM,MAAOC,GAAOM,cAChB,kBAACY,EAAA,EAAD,CAAkBnB,MAAOC,GAAOmK,qBAAsB/J,QAAS,WAC3D,cAAqBqD,OAAOC,KAAKiF,IAAjC,gBAAK,IAAIyB,EAAQ,KACb,GAAIvB,IAASuB,EACT,OAAQzB,GAAME,GAAMnK,MAChB,IAAK,UACDY,EAASlB,GAAU,IACnB4K,GAAa,GACb,MACJ,IAAK,cACD1J,EAASlB,GAAU,IACnB8K,GAAiB,GACjB,MACJ,IAAK,WACD5J,EAASlB,GAAU,IACnBgL,GAAc,OAO9B,kBAACzI,EAAA,EAAD,CAAMZ,MAAOC,GAAOqK,iBAApB,wBAEJ,kBAACnJ,EAAA,EAAD,CAAkBnB,MAAOC,GAAOmK,sBAC5B,kBAACxJ,EAAA,EAAD,CAAMZ,MAAOC,GAAOqK,iBAApB,wBAQxB,IAAMrK,GAASkC,IAAWC,OAAO,CAC7B4B,UAAW,CACPjC,gBAAiB,WACjBoC,WAAY,SACZJ,KAAM,GAGVxD,aAAc,CACVgK,WAAY,GACZlI,cAAe,OAEnBuH,eAAgB,CACZ7H,gBAAiB,WACjBoC,WAAY,SACZD,eAAgB,SAChBH,KAAM,GAEV4F,MAAO,CACHa,eAAgB,IAChBC,eAAgB,WAChBjI,SAAU,GACVE,WAAY,OACZE,MAAO,YAEXiH,UAAW,CACPa,kBAAmB,GACnBC,kBAAmB,YAEvBX,MAAO,CACHjI,gBAAiB,WACjBU,QAAS,GACTO,aAAc,GAElBoH,qBAAsB,CAClBrH,UAAW,EACXhB,gBAAiB,UACjBiB,aAAc,GACdC,gBAAiB,GACjBC,kBAAmB,IAEvBoH,gBAAiB,CACb9H,SAAU,GACVI,MAAO,OACPF,WAAY,OACZS,UAAW,SACXC,cAAe,gB,+DClMnB,kBAAmBwH,WACrBC,OAAOC,iBAAiB,QAAQ,WAC9BF,UAAUG,cACPC,SAAS,0BAA2B,CAAEC,MAAO,MAC7CC,MAAK,SAAUC,OAGfC,OAAM,SAAUC,GACf3G,QAAQyG,KAAK,oCAAqCE,U,oBCV1DtN,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,2C","file":"static/js/app.f414b74f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/quicheVegsGluten.cfd4c587.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cremedeespinafres.d64f4c65.jpg\";","module.exports = __webpack_public_path__ + \"static/media/saladaqueijoserra.b0d06c06.jpg\";","module.exports = __webpack_public_path__ + \"static/media/vegifruit.9cd2e61a.png\";","module.exports = __webpack_public_path__ + \"static/media/greencity.978665f2.png\";","module.exports = __webpack_public_path__ + \"static/media/saladasmais.0273522e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sandesBase.69a34ba3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pratoCarne.92d38d67.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pratoPeixe.20f9cfe0.jpg\";","import { combineReducers } from 'redux';\r\nimport { restaurants } from '../screens/AppCliente/AppClientes';\r\nconst INITIAL_CART = {\r\n    cart: [],\r\n    restaurant: '',\r\n    isLogged: false\r\n}\r\n\r\nexport const setLogged = val => ({\r\n    'type' : 'setLogged',\r\n    'payload' : val\r\n});\r\n\r\nexport const addPrato = prato => ({\r\n    'type' : 'addPrato',\r\n    'payload' : prato\r\n});\r\n\r\nexport const delPrato = prato => ({\r\n    'type' : 'delPrato',\r\n    'payload' : prato\r\n});\r\n\r\nfunction cartReducer(state = INITIAL_CART, action)   {\r\n    switch(action.type) {\r\n        case 'addPrato':\r\n            let restauranteIn = '';\r\n            for( let restaurant in restaurants ) for( let prato in restaurant.Pratos ) if (prato === action.payload) restauranteIn = restaurant.name;\r\n            if(state.restaurant != '') {\r\n                if(state.restaurant != restauranteIn) return; \r\n            }\r\n            return{...state,\r\n            cart: state.cart.concat(action.payload)}\r\n        case 'delPrato':\r\n            return{...state,\r\n            cart: state.cart.filter(prato => prato !== action.payload)}\r\n        case 'setLogged':\r\n            return{...state, \r\n                isLogged: action.payload}\r\n            default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default combineReducers({\r\n    cartReducer: cartReducer\r\n  });\r\n  ","import { NavigationContainer } from '@react-navigation/native';\r\nimport React, { useState } from 'react';\r\nimport {delPrato} from '../../assets/cartState';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { StyleSheet, Text, View, ScrollView, Image, TouchableHighlight, TouchableOpacity } from 'react-native';\r\nvar imgQuichVeg = require('../../assets/quicheVegsGluten.jpg');\r\nvar imgCremeEspi = require('../../assets/cremedeespinafres.jpg');\r\nvar imgSaladaQSerra = require('../../assets/saladaqueijoserra.jpg');\r\n\r\n\r\nexport function CartScreen(props) {\r\n    const dispatch = useDispatch(); \r\n    const cart = useSelector(state => state.cartReducer.cart);\r\n    const rest = useSelector(state => state.cartReducer.restaurant);\r\n    const getTotal = () => {\r\n        let res = 0;\r\n        for (let prato of cart) {\r\n            res += prato.Preço;\r\n        }\r\n        return res;\r\n    }\r\n    return (\r\n        <View>\r\n            <ScrollView>{\r\n                cart.map(prato => {\r\n                    return (\r\n                        <TouchableHighlight underlayColor={\"#DDDDDD\"} activeOpacity={0.3} style={styles.button} key={prato.id} onPress={() => dispatch(delPrato(prato))}>\r\n                            <View style={styles.containerRow}>\r\n                                <Image style={styles.image} source={prato.image} />\r\n                                <View style={styles.containerColumn}>\r\n                                    <Text style={styles.restaurantesOffer}>{prato.name}</Text>\r\n                                    <Text style={styles.foodText}>Opções : {prato.Opçoes}\r\n                                        {\"\\n\"}\r\n                            Preço : {prato.Preço} €</Text>\r\n                                </View>\r\n                            </View>\r\n                        </TouchableHighlight>\r\n\r\n                    );\r\n                })\r\n            }</ScrollView>\r\n            <Text style={styles.restaurantesOffer}>Preço total: {getTotal()}€</Text>\r\n            <TouchableOpacity style={styles.payButtonContainer}>\r\n                <Text style={styles.payButtonText}>Pagar</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n\r\n    );\r\n}\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default function Cart(route) {\r\n    return (\r\n        <Stack.Navigator initialroute={'Carrinho'} screenOptions={{ headerTitleAlign: 'center', headerStyle: { backgroundColor: 'darkcyan' },  headerTintColor:'white' }}>\r\n            <Stack.Screen name=\"Carrinho\" component={CartScreen} />\r\n        </Stack.Navigator>);\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {return {cartList : state.cartReducer.cart }};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        add : (prato) => dispatch({type: \"addPrato\", prato : prato})\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    containerRow: {\r\n        flexDirection: 'row'\r\n    },\r\n    containerColumn: {\r\n        paddingLeft: 10,\r\n        paddingBottom: 10,\r\n        flexDirection: 'column'\r\n    },\r\n    restaurantesOffer: {\r\n        fontSize: 15,\r\n        padding: 15,\r\n        fontWeight: 'bold',\r\n        textAlign: 'left',\r\n        color: 'black'\r\n    },\r\n    foodText: {\r\n        fontSize: 12,\r\n        textAlign: 'left',\r\n\r\n    },\r\n    button: {\r\n        padding: 7,\r\n        backgroundColor: \"#DDDDDD\",\r\n    },\r\n    image: {\r\n        width: 150,\r\n        height: 100,\r\n    },\r\n    payButtonContainer: {\r\n        elevation: 8,\r\n        backgroundColor: \"#009688\",\r\n        borderRadius: 10,\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 12\r\n    },\r\n    payButtonText: {\r\n        fontSize: 18,\r\n        color: \"#fff\",\r\n        fontWeight: \"bold\",\r\n        alignSelf: \"center\",\r\n        textTransform: \"uppercase\"\r\n    }\r\n});","import {createStore} from 'redux';\r\nimport cartReducer from './assets/cartState';\r\n\r\nconst configStore = () => {return createStore(cartReducer);}\r\nexport default configStore;","import React, { useState, useEffect, useContext, useCallback } from 'react';\nimport { StyleSheet, Text, View, ScrollView, Image, TouchableHighlight } from 'react-native';\nimport { useDispatch } from 'react-redux';\nimport { addPrato } from '../../assets/cartState';\nexport default function RestauranteMenu({route}) {\n    //<Image source={restaurante.image} style={styles.image}/> \n    const restaurante = route.params.restaurante;\n    const dispatch = useDispatch();\n    return (\n        <View>\n            <Text style={styles.restaurantesOffer}>Pratos Disponíveis:</Text>\n            <ScrollView>{\n                Object.keys(restaurante.Pratos).map(prato => {\n                    return (\n                        <TouchableHighlight underlayColor={\"#DDDDDD\"} activeOpacity={0.3} style={styles.button} key={restaurante.Pratos[prato].id} onPress={() => dispatch(addPrato(restaurante.Pratos[prato]))}>\n                            <View style={styles.containerRow}>\n                                <Image style={styles.image} source={restaurante.Pratos[prato].image} />\n                                <View style={styles.containerColumn}>\n                                    <Text style={styles.restaurantesOffer}>{prato}</Text>\n                                    <Text style={styles.foodText}>Opções : {restaurante.Pratos[prato].Opçoes}\n                                        {\"\\n\"}\n                            Preço : {restaurante.Pratos[prato].Preço} €</Text>\n                                </View>\n                            </View>\n                        </TouchableHighlight>\n                    );\n                })\n            }</ScrollView>\n        </View>\n\n    );\n}\n\n\nconst styles = StyleSheet.create({\n    containerRow: {\n        paddingBottom: 10,\n        flexDirection: 'row'\n    },\n    containerColumn: {\n        paddingLeft: 10,\n        paddingBottom: 10,\n        flexDirection: 'column'\n    },\n    restaurantesOffer: {\n        fontSize: 15,\n        fontWeight: 'bold',\n        textAlign: 'left',\n        color: 'black'\n    },\n    foodText: {\n        fontSize: 12,\n        textAlign: 'left',\n\n    },\n    button: {\n        padding: 7,\n    },\n    image: {\n        width: 150,\n        height: 100,\n    }\n});","import React from 'react';\nimport { StyleSheet, Text, View, ScrollView, Image, TouchableHighlight } from 'react-native';\nimport { restaurants } from '../AppCliente/AppClientes';\nexport default function Home({ navigation, route }) {\n  return (\n    <View style={{ flex: 1, padding: 20 }}>\n      <ScrollView style={styles.container}>{\n        Object.keys(restaurants).map(restaurante => {\n          return (\n            <TouchableHighlight underlayColor={\"#DDDDDD\"} activeOpacity={0.3} style={styles.button} key={restaurants[restaurante].id} onPress={() => navigation.push('Pratos', { restaurante: restaurants[restaurante] })}>\n              <View style={styles.restaurante}>\n                <Image source={restaurants[restaurante].image} style={styles.image} />\n                <View style={{ flex: 1, flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'center' }}>\n                  <Text style={styles.username}>{restaurante}</Text>\n                  <Text style={styles.bio}>{restaurants[restaurante].PricePoint}{restaurants[restaurante].Tags.map(tag => \" ⸎ \" + tag)}</Text>\n                </View>\n              </View>\n            </TouchableHighlight>\n          )\n        })\n      }</ScrollView>\n    </View>\n  );\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingBottom: 10,\n  },\n  restaurante: {\n    flexDirection: 'row',\n    paddingBottom: 10\n  },\n  username: {\n    fontSize: 15,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  bio: {\n    fontSize: 10,\n    padding: 5,\n    textAlign: 'left',\n    justifyContent: 'flex-start',\n  },\n  button: {\n    padding: 7,\n  },\n  image: {\n    width: 150,\n    height: 100,\n  }\n});","import React, { useState } from 'react';\nimport { StyleSheet } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport restauranteMenu from './RestauranteMenu';\nimport restaurantes from './Restaurantes';\n\n\n\nconst Stack = createStackNavigator();\nexport default function RestauranteStack(route) {\n  let restaurante = '';\n  console.log(route)\n  if(route.params)\n    restaurante = route.params.restaurante;\n  return (\n      <Stack.Navigator initialroute={'Restaurantes'} screenOptions={{headerTitleAlign: 'center' , headerStyle:{backgroundColor:'darkcyan'}, headerTintColor:'white'}} >\n        <Stack.Screen name=\"Restaurantes\" component={restaurantes} />\n        <Stack.Screen name=\"Pratos\" component={restauranteMenu}  initialParams={{restaurante: restaurante}}/>\n      </Stack.Navigator>\n      \n  );\n}\n\n\n\n\nconst styles = StyleSheet.create({\n  image: {\n    height: 300,\n  },\n});","import React from 'react';\nimport { StyleSheet, Text, View, ScrollView, Image, TouchableHighlight, Linking } from 'react-native';\nimport { restaurants, promos } from './AppClientes';\nexport default function Home({ navigation, route }) {\n    return (\n        <ScrollView>\n            <View style={{ flexDirection: 'column', flex: 1, padding: 20 }}>\n                <Text style={styles.restaurantesOffer}>\n                    Destaques:\n                </Text>\n                <ScrollView style={{ flexDirection: 'row', flex: 1 }} horizontal>{\n                    Object.keys(promos).map((restaurante) => {\n                        return (\n                            <View style={styles.restaurantesPromo}>\n                                <TouchableHighlight underlayColor='#DDDDD' activeOpacity={0.3} style={styles.button} key={promos[restaurante].id} onPress={() => {}}>\n                                    <View key={promos[restaurante].id} style={styles.restaurantesPromo}>{\n                                        <View style={{ flexDirection: 'column' }}>\n                                            <Image source={promos[restaurante].image} style={styles.image} />\n                                            <Text style={styles.restaurantesTitle}>{restaurante}</Text>\n                                            <Text style={styles.restaurantesDescr}>{promos[restaurante].descr}</Text>\n                                        </View>\n                                    }</View>\n                                </TouchableHighlight>\n\n                            </View>)\n                    })\n                }</ScrollView>\n                <Text style={styles.restaurantesOffer}>\n                    Restaurantes favoritos:\n                </Text>\n                <ScrollView style={{ flexDirection: 'row', flex: 1 }} horizontal>{\n                    Object.keys(restaurants).map((restaurante) => {\n                        return (\n                            <View style={styles.restaurantesPromo}>\n                                <TouchableHighlight underlayColor='#DDDDD' activeOpacity={0.3} style={styles.button} key={restaurants[restaurante].id} onPress={() => navigation.push('Pratos', { restaurante: restaurants[restaurante] })}>\n                                    <View key={restaurants[restaurante].id} style={styles.restaurantesPromo}>{\n                                        <View style={{ flexDirection: 'column' }}>\n                                            <Image source={restaurants[restaurante].image} style={styles.image} />\n                                            <Text style={styles.restaurantesTitle}>{restaurante}</Text>\n                                        </View>\n                                    }</View>\n                                </TouchableHighlight>\n\n                            </View>)\n                    })\n                }</ScrollView>\n                <Text style={styles.restaurantesOffer}\n                    onPress={() => Linking.openURL('https://micro-site-ams.herokuapp.com/')}>\n                    Visite o nosso site!\n            </Text>\n            </View>\n        </ScrollView>\n    );\n}\n\n\n\n\nconst styles = StyleSheet.create({\n    restaurantesPromo: {\n        flexDirection: 'column',\n        padding: 5,\n        width: 160,\n        height: 200,\n    },\n    image: {\n        width: 150,\n        height: 100,\n    },\n    restaurantesTitle: {\n        fontSize: 15,\n        fontWeight: 'bold',\n        textAlign: 'center',\n    },\n    restaurantesDescr: {\n        fontSize: 13,\n        textAlign: 'center',\n    },\n    restaurantesOffer: {\n        fontSize: 15,\n        fontWeight: 'bold',\n        textAlign: 'left',\n        color: 'black'\n    },\n    button: {\n        padding: 7,\n        height: 160,\n    },\n});","import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport home from './Home';\nimport restauranteMenu from './RestauranteMenu';\nconst Stack = createStackNavigator();\nexport default function HomeStack({route}) {\n  return (\n      <Stack.Navigator initialroute={'Home'} screenOptions={{headerTitleAlign: 'center', headerStyle:{backgroundColor:'darkcyan'},  headerTintColor:'white'}}>\n        <Stack.Screen name=\"Home\" component={home} />\n        <Stack.Screen name=\"Pratos\" component={restauranteMenu} />\n      </Stack.Navigator>\n  );\n}\n\n","import React, { useState } from 'react';\r\nimport {Restart} from 'fiction-expo-restart';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport Cart from '../AppCliente/Cart';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport Icon1 from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport Icon from 'react-native-vector-icons/Ionicons';\r\nimport { Provider } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setLogged } from '../../assets/cartState';\r\nimport configStore from '../../Store';\r\nimport RestauranteStack from '../AppCliente/RestauranteStack';\r\nimport HomeStack from '../AppCliente/HomeStack';\r\nvar xmasPromo = require('../../assets/xmaspromo.jpg');\r\nvar newYearPromo = require('../../assets/newYearPromo.jpg');\r\nvar imgVegifruit = require('../../assets/vegifruit.png');\r\nvar imgGreenCity = require('../../assets/greencity.png');\r\nvar imgSaladasmais = require('../../assets/saladasmais.jpg');\r\nvar imgQuichVeg = require('../../assets/quicheVegsGluten.jpg');\r\nvar imgCremeEspi = require('../../assets/cremedeespinafres.jpg');\r\nvar imgSaladaQSerra = require('../../assets/saladaqueijoserra.jpg');\r\nvar imgSandesBase = require('../../assets/sandesBase.jpg');\r\nvar imgPratoCarne = require('../../assets/pratoCarne.jpg');\r\nvar imgPratoPeixe = require('../../assets/pratoPeixe.jpg');\r\n\r\nexport const promos = {\r\n  \"Promoção de Natal\": {\r\n    \"name\": \"Promoção de Natal\",\r\n    \"descr\": \"Poupe 30% ou mais de 22/12 até 27/12\",\r\n    \"id\": 0,\r\n    \"image\": xmasPromo,\r\n  },\r\n  \"Promoção de Ano Novo\": {\r\n    \"name\": \"Promoção de Ano Novo\",\r\n    \"descr\": \"Poupe 30% ou mais de 30/12 até 02/01\",\r\n    \"id\": 1,\r\n    \"image\": newYearPromo,\r\n\r\n  }\r\n}\r\n\r\nexport const restaurants = {\r\n  \"Vegifruit\": {\r\n    \"name\": \"Vegifruit\",\r\n    \"id\": 0,\r\n    \"PricePoint\": \"€\",\r\n    \"Address\": \"Rua de São Sebastião, 122 3810 - 187 Aveiro\",\r\n    \"Tags\": [\"Vegan\", \"Saladas\", \"Biologico\"],\r\n    \"Pratos\": {\r\n      \"Salada de queijo da serra\": {\r\n        \"name\": \"Salada de queijo da serra\",\r\n        \"id\": 0,\r\n        \"Preço\": 7,\r\n        \"Opçoes\": [\"Extra azeitonas\"],\r\n        \"image\": imgSaladaQSerra\r\n      },\r\n      \"Quiche Vegetariana s/Glúten\": {\r\n        \"name\": \"Quiche Vegetariana s/Glúten\",\r\n        \"id\": 1,\r\n        \"Preço\": 6.5,\r\n        \"Opções\": [],\r\n        \"image\": imgQuichVeg,\r\n      },\r\n      \"Creme de espinafres\": {\r\n        \"name\": \"Creme de espinafres\",\r\n        \"id\": 2,\r\n        \"Preço\": 6.5,\r\n        \"Opções\": [],\r\n        \"image\": imgCremeEspi,\r\n      },\r\n\r\n    },\r\n    \"image\": imgVegifruit,\r\n  },\r\n  \"Green City quiches & saladas, co.\": {\r\n    \"name\": \"Green City quiches & saladas, co.\",\r\n    \"id\": 1,\r\n    \"PricePoint\": \"€\",\r\n    \"Address\": \"R. de Castro Matoso 28 A, 3810-079 Aveiro\",\r\n    \"Tags\": [\"Vegan\", \"Saladas\", \"Quiches\", \"Biologico\"],\r\n    \"Pratos\": {\r\n      \"Quiche especial\": {\r\n        \"name\": \"Quiche especial\",\r\n        \"id\": 0,\r\n        \"Preço\": 6,\r\n        \"Opçoes\": [\"Tamanho grande\"],\r\n        \"image\": imgGreenCity\r\n      }\r\n    },\r\n    \"image\": imgGreenCity,\r\n  },\r\n  \"Saladas+\": {\r\n    \"name\": \"Saladas+\",\r\n    \"id\": 2,\r\n    \"PricePoint\": \"€\",\r\n    \"Address\": \"R. de São Sebastião 31, 3810-187 Aveiro\",\r\n    \"Tags\": [\"Vegan\", \"Saladas\", , \"Biologico\"],\r\n    \"Pratos\": {\r\n      \"Sandes Base\": {\r\n        \"name\": \"Sandes Base\",\r\n        \"id\": 0,\r\n        \"Preço\": 3.10,\r\n        \"Opçoes\": [\"Extra ovo\"],\r\n        \"image\": imgSandesBase\r\n      },\r\n\r\n      \"Prato do dia Peixe\": {\r\n        \"name\": \"Prato do dia Peixe\",\r\n        \"id\": 1,\r\n        \"Preço\": 7.45,\r\n        \"Opçoes\": [\"Extra tempero\"],\r\n        \"image\": imgPratoPeixe\r\n      },\r\n\r\n      \"Prato do dia Carne\": {\r\n        \"name\": \"Prato do dia Carne\",\r\n        \"id\": 2,\r\n        \"Preço\": 7.45,\r\n        \"Opçoes\": [\"Extra acompanhamento\"],\r\n        \"image\": imgPratoCarne\r\n      }\r\n    },\r\n    \"image\": imgSaladasmais,\r\n  },\r\n}\r\n\r\nconst store = configStore();\r\n\r\n\r\nexport default function App(route) {\r\n  return(\r\n    <Provider store={store}>\r\n      <AppContent />\r\n    </Provider>\r\n  );\r\n}\r\n\r\n\r\nexport function Logout({navigation}) {\r\n\r\n  Restart();\r\n  return(<></>);\r\n}\r\n\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nfunction AppContent() {\r\n  const dispatch = useDispatch();\r\n  dispatch(setLogged(false));\r\n  return (\r\n    <NavigationContainer independent={true}>\r\n      <Tab.Navigator initialRouteName='Home' screenOptions={({ route }) => ({\r\n        tabBarIcon: ({ focused, color, size }) => {\r\n          let iconName;\r\n          if (route.name === 'Home') {\r\n            iconName = \"ios-home\";\r\n          } else if (route.name === 'Restaurantes') {\r\n            iconName = \"ios-restaurant\";\r\n          }\r\n          else if(route.name === \"Carrinho\")\r\n            iconName = \"md-cart\";\r\n          else\r\n            return <Icon1 name={\"logout\"} size={size} color={color} />;\r\n\r\n          // You can return any component that you like here!\r\n          return <Icon name={iconName} size={size} color={color} />;\r\n        },\r\n      })}\r\n        tabBarOptions={{\r\n          activeTintColor: 'tomato',\r\n          inactiveTintColor: 'gray',\r\n        }}>\r\n        <Tab.Screen name=\"Restaurantes\" component={RestauranteStack} />\r\n        <Tab.Screen name=\"Home\" component={HomeStack} />\r\n        <Tab.Screen name=\"Carrinho\" component={Cart} />\r\n        <Tab.Screen name=\"Logout\" component={Logout} />\r\n      </Tab.Navigator>\r\n    </NavigationContainer>);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect, useContext, useCallback } from 'react';\nimport { StyleSheet, Text, View, ScrollView, Image, TouchableHighlight } from 'react-native';\nimport { restaurants } from './AppRestaurante';\nexport default function RestauranteMenu({route}) {\n    //<Image so(urce={restaurante.image} style={styles.image}/>\n    const restaurante = route.params.restaurante.restaurante;\n    return (\n        <View>\n            <Text style={styles.restaurantesOffer}>Pratos Disponibilizados:</Text>\n            <ScrollView>{\n                Object.keys(restaurants[restaurante].Pratos).map(prato => {\n                    return (\n                        <TouchableHighlight underlayColor={\"#DDDDDD\"} activeOpacity={0.3} style={styles.button} key={restaurants[restaurante].Pratos[prato].id} onPress={() => {}}>\n                            <View style={styles.containerRow}>\n                                <Image style={styles.image} source={restaurants[restaurante].Pratos[prato].image} />\n                                <View style={styles.containerColumn}>\n                                    <Text style={styles.restaurantesOffer}>{prato}</Text>\n                                    <Text style={styles.foodText}>Opções : {restaurants[restaurante].Pratos[prato].Opçoes}\n                                        {\"\\n\"}\n                            Preço : {restaurants[restaurante].Pratos[prato].Preço} €</Text>\n                                </View>\n                            </View>\n                        </TouchableHighlight>\n                    );\n                })\n            }</ScrollView>\n        </View>\n\n    );\n}\n\n\nconst styles = StyleSheet.create({\n    containerRow: {\n        paddingBottom: 10,\n        flexDirection: 'row'\n    },\n    containerColumn: {\n        paddingLeft: 10,\n        paddingBottom: 10,\n        flexDirection: 'column'\n    },\n    restaurantesOffer: {\n        fontSize: 15,\n        fontWeight: 'bold',\n        textAlign: 'left',\n        color: 'black'\n    },\n    foodText: {\n        fontSize: 12,\n        textAlign: 'left',\n\n    },\n    button: {\n        padding: 7,\n    },\n    image: {\n        width: 150,\n        height: 100,\n    }\n});","import React from 'react';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport Pratos from './Pratos';\r\nconst Stack = createStackNavigator();\r\nexport default function PratosStack({route}) {\r\n    let restaurante = '';\r\n    if (route.params)\r\n        restaurante = route.params.restaurante;\r\n\r\n    return (\r\n        <Stack.Navigator initialroute={'Pratos'} screenOptions={{ headerTitleAlign: 'center', headerStyle: { backgroundColor: 'darkcyan' }, headerTintColor: 'white' }}>\r\n            <Stack.Screen name=\"Pratos\" component={Pratos} initialParams={restaurante = { restaurante }} />\r\n        </Stack.Navigator>\r\n\r\n\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\nimport Icon from 'react-native-vector-icons/Ionicons';\r\nimport Icon2 from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport { StyleSheet, Text, View, ScrollView, Image, TouchableHighlight } from 'react-native';\r\nimport { restaurants } from './AppRestaurante';\r\nexport default function Orders({ route }) {\r\n    //<Image so(urce={restaurante.image} style={styles.image}/>\r\n    console.log(route);\r\n    const restaurante = route.params.restaurante.restaurante.restaurante;\r\n    return (\r\n        <View>\r\n            <Text style={styles.restaurantesOffer}>Pratos Pedidos:</Text>\r\n            <ScrollView>{\r\n                Object.keys(restaurants[restaurante].Pratos).map(prato => {\r\n                    return (\r\n                        <View style={styles.button} key={restaurants[restaurante].Pratos[prato].id}>\r\n                            <View style={styles.containerRow}>\r\n                                <Image style={styles.image} source={restaurants[restaurante].Pratos[prato].image} />\r\n                                <View style={styles.containerColumn}>\r\n                                    <Text style={styles.restaurantesOffer}>{prato}</Text>\r\n                                    <Text style={styles.foodText}>Opções : {restaurants[restaurante].Pratos[prato].Opçoes}\r\n                                        {\"\\n\"}\r\n                                Preço : {restaurants[restaurante].Pratos[prato].Preço} €</Text>\r\n                                    <View style={styles.containerRow}>\r\n                                        <TouchableHighlight underlayColor={\"#DDDDDD\"} activeOpacity={0.3} style={styles.button} onPress={() => {}}>\r\n                                            <Icon2 name=\"check-bold\" size={15} style={{ borderRightWidth: 5, borderRightColor: 'rgba(0,0,0,0)' }} />\r\n                                        </TouchableHighlight>\r\n                                        <TouchableHighlight underlayColor={\"#DDDDDD\"} activeOpacity={0.3} style={styles.button}  onPress={() => {}}>\r\n                                            <Icon2 name=\"delete\" size={15} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n                            </View>\r\n                        </View>\r\n                    );\r\n                })\r\n            }</ScrollView>\r\n        </View>\r\n\r\n    );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    containerRow: {\r\n        paddingBottom: 10,\r\n        flexDirection: 'row'\r\n    },\r\n    containerColumn: {\r\n        paddingLeft: 10,\r\n        paddingBottom: 10,\r\n        flexDirection: 'column'\r\n    },\r\n    restaurantesOffer: {\r\n        fontSize: 15,\r\n        fontWeight: 'bold',\r\n        textAlign: 'left',\r\n        color: 'black'\r\n    },\r\n    foodText: {\r\n        fontSize: 12,\r\n        textAlign: 'left',\r\n\r\n    },\r\n    button: {\r\n        padding: 7,\r\n    },\r\n    image: {\r\n        width: 150,\r\n        height: 100,\r\n    }\r\n});","import React from 'react';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport Orders from './Orders';\r\nconst Stack = createStackNavigator();\r\nexport default function PratosStack({route}) {\r\n    let restaurante = '';\r\n    if (route.params)\r\n        restaurante = route.params.restaurante;\r\n\r\n    return (\r\n        <Stack.Navigator initialroute={'Orders'} screenOptions={{ headerTitleAlign: 'center', headerStyle: { backgroundColor: 'darkcyan' }, headerTintColor: 'white' }}>\r\n            <Stack.Screen name=\"Pedidos\" component={Orders} initialParams={restaurante = { restaurante }} />\r\n        </Stack.Navigator>\r\n\r\n\r\n    );\r\n}\r\n\r\n","import React, { useState } from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Icon1 from 'react-native-vector-icons/MaterialCommunityIcons';\nimport Icon from 'react-native-vector-icons/Ionicons';\nimport RestaurantDishes from './PratosStack';\nimport OrdersStack from './OrdersStack';\nimport {Restart} from 'fiction-expo-restart';\nimport { Provider } from 'react-redux';\nimport configStore from '../../Store';\nimport { setLogged } from '../../assets/cartState';\nimport { useDispatch } from 'react-redux';\nvar imgVegifruit = require('../../assets/vegifruit.png');\nvar imgGreenCity = require('../../assets/greencity.png');\nvar imgSaladasmais = require('../../assets/saladasmais.jpg');\nvar imgQuichVeg = require('../../assets/quicheVegsGluten.jpg');\nvar imgCremeEspi = require('../../assets/cremedeespinafres.jpg');\nvar imgSaladaQSerra = require('../../assets/saladaqueijoserra.jpg');\nvar imgSandesBase = require('../../assets/sandesBase.jpg');\nvar imgPratoCarne = require('../../assets/pratoCarne.jpg');\nvar imgPratoPeixe = require('../../assets/pratoPeixe.jpg');\n\nexport const restaurants = {\n  \"Vegifruit\": {\n    \"name\": \"Vegifruit\",\n    \"id\": 0,\n    \"PricePoint\": \"€\",\n    \"Address\": \"Rua de São Sebastião, 122 3810 - 187 Aveiro\",\n    \"Tags\": [\"Vegan\", \"Saladas\", \"Biologico\"],\n    \"Pratos\": {\n      \"Salada de queijo da serra\": {\n        \"name\": \"Salada de queijo da serra\",\n        \"id\": 0,\n        \"Preço\": 7,\n        \"Opçoes\": [\"Extra azeitonas\"],\n        \"image\": imgSaladaQSerra\n      },\n      \"Quiche Vegetariana s/Glúten\": {\n        \"name\": \"Quiche Vegetariana s/Glúten\",\n        \"id\": 1,\n        \"Preço\": 6.5,\n        \"Opções\": [],\n        \"image\": imgQuichVeg,\n      },\n      \"Creme de espinafres\": {\n        \"name\": \"Creme de espinafres\",\n        \"id\": 2,\n        \"Preço\": 6.5,\n        \"Opções\": [],\n        \"image\": imgCremeEspi,\n      },\n\n    },\n    \"image\": imgVegifruit,\n  },\n  \"Green City quiches & saladas, co.\": {\n    \"name\": \"Green City quiches & saladas, co.\",\n    \"id\": 1,\n    \"PricePoint\": \"€\",\n    \"Address\": \"R. de Castro Matoso 28 A, 3810-079 Aveiro\",\n    \"Tags\": [\"Vegan\", \"Saladas\", \"Quiches\", \"Biologico\"],\n    \"Pratos\": {\n      \"Quiche especial\": {\n        \"name\": \"Quiche especial\",\n        \"id\": 0,\n        \"Preço\": 6,\n        \"Opçoes\": [\"Tamanho grande\"],\n        \"image\": imgGreenCity\n      }\n    },\n    \"image\": imgGreenCity,\n  },\n  \"Saladas+\": {\n    \"name\": \"Saladas+\",\n    \"id\": 2,\n    \"PricePoint\": \"€\",\n    \"Address\": \"R. de São Sebastião 31, 3810-187 Aveiro\",\n    \"Tags\": [\"Vegan\", \"Saladas\", , \"Biologico\"],\n    \"Pratos\": {\n      \"Sandes Base\": {\n        \"name\": \"Sandes Base\",\n        \"id\": 0,\n        \"Preço\": 3.10,\n        \"Opçoes\": [\"Extra ovo\"],\n        \"image\": imgSandesBase\n      },\n\n      \"Prato do dia Peixe\": {\n        \"name\": \"Prato do dia Peixe\",\n        \"id\": 1,\n        \"Preço\": 7.45,\n        \"Opçoes\": [\"Extra tempero\"],\n        \"image\": imgPratoPeixe\n      },\n\n      \"Prato do dia Carne\": {\n        \"name\": \"Prato do dia Carne\",\n        \"id\": 2,\n        \"Preço\": 7.45,\n        \"Opçoes\": [\"Extra acompanhamento\"],\n        \"image\": imgPratoCarne\n      }\n    },\n    \"image\": imgSaladasmais,\n  },\n}\n\n\nconst store = configStore();\n\n\nexport default function AppWraper(route) {\n  return(\n    <Provider store={store}>\n      <App restaurante={route.restaurante}/>\n    </Provider>\n  );\n}\n\nconst Tab = createBottomTabNavigator();\n\nfunction App({restaurante}) {\n  const dispatch = useDispatch();\n  dispatch(setLogged(false));\n  return (\n    <NavigationContainer independent={true}>\n      <Tab.Navigator initialRouteName='Restaurante' screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n          if (route.name === 'Restaurante') {\n            return <Icon name={\"ios-restaurant\"} size={size} color={color} />;\n          }\n          else if (route.name === \"Pedidos\")\n            return <Icon1 name={\"food\"} size={size} color={color} />;\n          else \n            return <Icon1 name={\"logout\"} size={size} color={color} />;\n        },\n      })}\n        tabBarOptions={{\n          activeTintColor: 'tomato',\n          inactiveTintColor: 'gray',\n        }}>\n        <Tab.Screen name=\"Restaurante\" component={RestaurantDishes} initialParams={restaurante={restaurante}}/>\n        <Tab.Screen name=\"Pedidos\" component={OrdersStack} initialParams={restaurante={restaurante}}/>\n        <Tab.Screen name=\"Logout\" component={Logout}/>\n      </Tab.Navigator>\n    </NavigationContainer>);\n}\n\n\nexport function Logout({navigation}) {\n\n  Restart();\n  return(<></>);\n}\n\n\n\n\n","import React from 'react';\r\nimport Icon from 'react-native-vector-icons/Ionicons';\r\nimport Icon2 from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport { StyleSheet, Text, View, ScrollView, Image, TouchableHighlight } from 'react-native';\r\nimport { restaurants } from './AppEstafeta';\r\nexport default function Orders({ route }) {\r\n    //<Image so(urce={restaurante.image} style={styles.image}/>\r\n    console.log(route);\r\n    const estafeta = route.params.estafeta;\r\n    return (\r\n        <View>\r\n            <Text style={styles.restaurantesOffer}>Pratos Pedidos:</Text>\r\n            <ScrollView>{\r\n                estafeta.pedidos.map(pedido => {\r\n                    return (\r\n                        <View style={styles.button} key={pedido.id}>\r\n                            <View style={styles.containerRow}>\r\n                                <Image style={styles.image} source={restaurants[pedido.restaurante].image} />\r\n                                <View style={styles.containerColumn}>\r\n                                    <Text style={styles.restaurantesOffer}>{pedido.restaurante}</Text>\r\n                                    <Text style={styles.foodText}>{pedido.prato}\r\n                                        {\"\\n\"}\r\n                                        Morada : {pedido.morada}</Text>\r\n                                    <View style={styles.containerRow}>\r\n                                        <TouchableHighlight underlayColor={\"#DDDDDD\"} activeOpacity={0.3} style={styles.button} onPress={() => {}}>\r\n                                            <Icon2 name=\"check-bold\" size={17} style={{  }} />\r\n                                        </TouchableHighlight>\r\n                                        <TouchableHighlight underlayColor={\"#DDDDDD\"} activeOpacity={0.3} style={styles.button}  onPress={() => {}}>\r\n                                            <Icon2 name=\"delete\" size={17} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n                            </View>\r\n                        </View>\r\n                    );\r\n                })\r\n            }</ScrollView>\r\n        </View>\r\n\r\n    );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    containerRow: {\r\n        paddingBottom: 10,\r\n        flexDirection: 'row'\r\n    },\r\n    containerColumn: {\r\n        paddingLeft: 10,\r\n        paddingBottom: 10,\r\n        flexDirection: 'column'\r\n    },\r\n    restaurantesOffer: {\r\n        fontSize: 15,\r\n        fontWeight: 'bold',\r\n        textAlign: 'left',\r\n        color: 'black'\r\n    },\r\n    foodText: {\r\n        fontSize: 12,\r\n        textAlign: 'left',\r\n\r\n    },\r\n    button: {\r\n        padding: 5,\r\n        borderRadius: 13\r\n    },\r\n    image: {\r\n        width: 150,\r\n        height: 100,\r\n    }\r\n});","import React from 'react';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport Orders from './Orders';\r\nconst Stack = createStackNavigator();\r\nexport default function PratosStack({route}) {\r\n    let estafeta = '';\r\n    if (route.params)\r\n        estafeta = route.params.estafeta;\r\n\r\n    return (\r\n        <Stack.Navigator initialroute={'Orders'} screenOptions={{ headerTitleAlign: 'center', headerStyle: { backgroundColor: 'darkcyan' }, headerTintColor: 'white' }}>\r\n            <Stack.Screen name=\"Pedidos\" component={Orders} initialParams={estafeta = { estafeta }} />\r\n        </Stack.Navigator>\r\n\r\n\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\nimport { Rating } from 'react-native-ratings';\r\nimport { StyleSheet, Text, View, ScrollView, Image, TouchableHighlight } from 'react-native';\r\nimport { restaurants } from './AppEstafeta';\r\nexport default function Feedback({ route }) {\r\n    //<Image so(urce={restaurante.image} style={styles.image}/>\r\n    console.log(route);\r\n    const estafeta = route.params.estafeta;\r\n    const getAverageRate = () => {\r\n        let res = 0;\r\n        let count = 0;\r\n        for (let feedback of estafeta.feedback) {\r\n            console.log(feedback);\r\n            res += feedback.rating;\r\n            count += 1;\r\n        }\r\n        return (1.0 * res / count);\r\n    }\r\n    const averageR = getAverageRate();\r\n    console.log(averageR);\r\n    return (\r\n        <View>\r\n            <Text style={styles.restaurantesOffer}>Feedback das entregas:</Text>\r\n            <ScrollView>{\r\n                estafeta.feedback.map(pedido => {\r\n                    return (\r\n                        <View style={styles.button} key={pedido.id}>\r\n                            <View style={styles.containerRow}>\r\n                                <Image style={styles.image} source={restaurants[pedido.restaurante].image} />\r\n                                <View style={styles.containerColumn}>\r\n                                    <Text style={styles.restaurantesOffer}>{pedido.restaurante}</Text>\r\n                                    <Text style={styles.foodText}>Rating:\r\n                                    {'\\n'} </Text>\r\n                                    <Rating\r\n                                        type='star'\r\n                                        readonly\r\n                                        startingValue={pedido.rating}\r\n                                        tintColor='rgb(242,242,242)'\r\n                                        style={styles.rating}\r\n                                        imageSize={15}\r\n                                    />\r\n                                </View>\r\n                            </View>\r\n                        </View>\r\n                    );\r\n                })\r\n            }\r\n                <View>\r\n                    <Text style={styles.restaurantesOffer}>Average Rating: </Text>\r\n                    <View style={styles.containerRow}>\r\n                        <Rating\r\n                            type='star'\r\n                            readonly\r\n                            tintColor='rgb(242,242,242)'\r\n                            startingValue={averageR}\r\n                        />\r\n                        <Text style={{\r\n                            fontSize: 15,\r\n                            fontWeight: 'bold',\r\n                            textAlign: 'left',\r\n                            color: 'black',\r\n                            alignSelf: 'center'\r\n                        }}>{averageR.toFixed(2)}/5!</Text>\r\n                    </View>\r\n                </View>\r\n            </ScrollView>\r\n        </View >\r\n\r\n    );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    containerRow: {\r\n        paddingBottom: 10,\r\n        flexDirection: 'row'\r\n    },\r\n    containerColumn: {\r\n        paddingLeft: 10,\r\n        paddingBottom: 10,\r\n        flexDirection: 'column'\r\n    },\r\n    restaurantesOffer: {\r\n        fontSize: 15,\r\n        fontWeight: 'bold',\r\n        textAlign: 'left',\r\n        color: 'black'\r\n    },\r\n    foodText: {\r\n        fontSize: 12,\r\n        textAlign: 'left',\r\n\r\n    },\r\n    button: {\r\n        padding: 5,\r\n        borderRadius: 13\r\n    },\r\n    image: {\r\n        width: 150,\r\n        height: 100,\r\n    },\r\n    rating: {\r\n        borderRightWidth: 500,\r\n        borderRightColor: 'rgba(0,0,0,0)',\r\n    }\r\n});","import React from 'react';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport Feedback from './Feedback';\r\nconst Stack = createStackNavigator();\r\nexport default function PratosStack({route}) {\r\n    let estafeta = '';\r\n    if (route.params)\r\n        estafeta = route.params.estafeta;\r\n\r\n    return (\r\n        <Stack.Navigator initialroute={'Feedback'} screenOptions={{ headerTitleAlign: 'center', headerStyle: { backgroundColor: 'darkcyan' }, headerTintColor: 'white' }}>\r\n            <Stack.Screen name=\"Feedback\" component={Feedback} initialParams={estafeta} />\r\n        </Stack.Navigator>\r\n\r\n\r\n    );\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport configStore from '../../Store';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport Icon1 from 'react-native-vector-icons/Ionicons';\r\nimport Icon2 from 'react-native-vector-icons/MaterialIcons';\r\nimport Icon3 from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport OrdersStack from './OrdersStack';\r\nimport {Restart} from 'fiction-expo-restart';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setLogged } from '../../assets/cartState';\r\nimport FeedbackStack from './FeedbackStack';\r\nvar imgVegifruit = require('../../assets/vegifruit.png');\r\nvar imgGreenCity = require('../../assets/greencity.png');\r\nvar imgSaladasmais = require('../../assets/saladasmais.jpg');\r\nvar imgQuichVeg = require('../../assets/quicheVegsGluten.jpg');\r\nvar imgCremeEspi = require('../../assets/cremedeespinafres.jpg');\r\nvar imgSaladaQSerra = require('../../assets/saladaqueijoserra.jpg');\r\nvar imgSandesBase = require('../../assets/sandesBase.jpg');\r\nvar imgPratoCarne = require('../../assets/pratoCarne.jpg');\r\nvar imgPratoPeixe = require('../../assets/pratoPeixe.jpg');\r\n\r\nexport const restaurants = {\r\n  \"Vegifruit\": {\r\n    \"name\": \"Vegifruit\",\r\n    \"id\": 0,\r\n    \"PricePoint\": \"€\",\r\n    \"Address\": \"Rua de São Sebastião, 122 3810 - 187 Aveiro\",\r\n    \"Tags\": [\"Vegan\", \"Saladas\", \"Biologico\"],\r\n    \"Pratos\": {\r\n      \"Salada de queijo da serra\": {\r\n        \"name\": \"Salada de queijo da serra\",\r\n        \"id\": 0,\r\n        \"Preço\": 7,\r\n        \"Opçoes\": [\"Extra azeitonas\"],\r\n        \"image\": imgSaladaQSerra\r\n      },\r\n      \"Quiche Vegetariana s/Glúten\": {\r\n        \"name\": \"Quiche Vegetariana s/Glúten\",\r\n        \"id\": 1,\r\n        \"Preço\": 6.5,\r\n        \"Opções\": [],\r\n        \"image\": imgQuichVeg,\r\n      },\r\n      \"Creme de espinafres\": {\r\n        \"name\": \"Creme de espinafres\",\r\n        \"id\": 2,\r\n        \"Preço\": 6.5,\r\n        \"Opções\": [],\r\n        \"image\": imgCremeEspi,\r\n      },\r\n\r\n    },\r\n    \"image\": imgVegifruit,\r\n  },\r\n  \"Green City quiches & saladas, co.\": {\r\n    \"name\": \"Green City quiches & saladas, co.\",\r\n    \"id\": 1,\r\n    \"PricePoint\": \"€\",\r\n    \"Address\": \"R. de Castro Matoso 28 A, 3810-079 Aveiro\",\r\n    \"Tags\": [\"Vegan\", \"Saladas\", \"Quiches\", \"Biologico\"],\r\n    \"Pratos\": {\r\n      \"Quiche especial\": {\r\n        \"name\": \"Quiche especial\",\r\n        \"id\": 0,\r\n        \"Preço\": 6,\r\n        \"Opçoes\": [\"Tamanho grande\"],\r\n        \"image\": imgGreenCity\r\n      }\r\n    },\r\n    \"image\": imgGreenCity,\r\n  },\r\n  \"Saladas+\": {\r\n    \"name\": \"Saladas+\",\r\n    \"id\": 2,\r\n    \"PricePoint\": \"€\",\r\n    \"Address\": \"R. de São Sebastião 31, 3810-187 Aveiro\",\r\n    \"Tags\": [\"Vegan\", \"Saladas\", , \"Biologico\"],\r\n    \"Pratos\": {\r\n      \"Sandes Base\": {\r\n        \"name\": \"Sandes Base\",\r\n        \"id\": 0,\r\n        \"Preço\": 3.10,\r\n        \"Opçoes\": [\"Extra ovo\"],\r\n        \"image\": imgSandesBase\r\n      },\r\n\r\n      \"Prato do dia Peixe\": {\r\n        \"name\": \"Prato do dia Peixe\",\r\n        \"id\": 1,\r\n        \"Preço\": 7.45,\r\n        \"Opçoes\": [\"Extra tempero\"],\r\n        \"image\": imgPratoPeixe\r\n      },\r\n\r\n      \"Prato do dia Carne\": {\r\n        \"name\": \"Prato do dia Carne\",\r\n        \"id\": 2,\r\n        \"Preço\": 7.45,\r\n        \"Opçoes\": [\"Extra acompanhamento\"],\r\n        \"image\": imgPratoCarne\r\n      }\r\n    },\r\n    \"image\": imgSaladasmais,\r\n  },\r\n}\r\n\r\n\r\n\r\nconst store = configStore();\r\n\r\n\r\nexport default function AppWraper(route) {\r\n  return(\r\n    <Provider store={store}>\r\n      <App restaurante={route}/>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nfunction App({restaurante}) {\r\n  const dispatch = useDispatch();\r\n  let estafeta = restaurante.estafeta;\r\n  dispatch(setLogged(false));\r\n  return (\r\n    <NavigationContainer independent={true}>\r\n      <Tab.Navigator initialRouteName='Pedidos' screenOptions={({ route }) => ({\r\n        \r\n        tabBarIcon: ({ focused, color, size }) => {\r\n          if (route.name === 'Pedidos') \r\n            return <Icon1 name={\"ios-restaurant\"} size={size} color={color} />;\r\n\r\n          else if (route.name === 'Feedback')\r\n            return <Icon2 name={\"feedback\"} size={size} color={color} />;\r\n\r\n          else \r\n            return <Icon3 name={\"logout\"} size={size} color={color} />;\r\n          \r\n        },\r\n      })}\r\n        tabBarOptions={{\r\n          activeTintColor: 'tomato',\r\n          inactiveTintColor: 'gray',\r\n        }}>\r\n        <Tab.Screen name=\"Pedidos\" component={OrdersStack} initialParams={estafeta={estafeta}}/>\r\n        <Tab.Screen name=\"Feedback\" component={FeedbackStack} initialParams={estafeta={estafeta}}/>\r\n        <Tab.Screen name=\"Logout\" component={Logout}/>\r\n      </Tab.Navigator>\r\n    </NavigationContainer>);\r\n}\r\n\r\n\r\n\r\nexport function Logout({navigation}) {\r\n\r\n  Restart();\r\n  return(<></>);\r\n}","import React, { useState , useEffect } from 'react';\r\nimport { TextInput, StyleSheet, View, Text, TouchableOpacity } from 'react-native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport ClienteApp from './screens/AppCliente/AppClientes';\r\nimport RestauranteApp from './screens/AppRestaurante/AppRestaurante';\r\nimport EstafetaApp from './screens/AppEstafeta/AppEstafeta';\r\nimport { Provider } from 'react-redux';\r\nimport configStore from './Store';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setLogged } from './assets/cartState';\r\nconst users = {\r\n    \"cliente\": {\r\n        \"type\": \"cliente\",\r\n        \"password\": \"cliente\",\r\n    },\r\n    \"restaurante\": {\r\n        \"type\": \"restaurante\",\r\n        \"password\": \"restaurante\",\r\n        \"restaurante\": \"Vegifruit\"\r\n    },\r\n    \"estafeta\": {\r\n        \"type\": \"estafeta\",\r\n        \"password\": \"estafeta\",\r\n        \"feedback\": [\r\n            {\r\n                \"id\": 1,\r\n                \"restaurante\": \"Vegifruit\",\r\n                \"rating\": 5\r\n            },\r\n            {\r\n                \"id\": 2,\r\n                \"restaurante\": \"Saladas+\",\r\n                \"rating\": 4\r\n            },\r\n            {\r\n                \"id\": 3,\r\n                \"restaurante\": \"Green City quiches & saladas, co.\",\r\n                \"rating\": 4\r\n            },\r\n        ],\r\n        \"pedidos\": [\r\n            {\r\n                \"id\": 1,\r\n                \"restaurante\": \"Saladas+\",\r\n                \"prato\": \"Prato do dia Peixe\",\r\n                \"morada\": \"Universidade de Aveiro, DECA\"\r\n            },\r\n\r\n            {\r\n                \"id\": 2,\r\n                \"restaurante\": \"Vegifruit\",\r\n                \"prato\": \"Salada de queijo da serra\",\r\n                \"morada\": \"Universidade de Aveiro, DETI\"\r\n            },\r\n            {\r\n                \"id\": 3,\r\n                \"restaurante\": \"Green City quiches & saladas, co.\",\r\n                \"prato\": \"Quiche especial\",\r\n                \"morada\": \"Universidade de Aveiro, CP\"\r\n            },\r\n        ]\r\n    },\r\n}\r\nconst store = configStore();\r\n\r\nexport default function AppWraper(route) {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppContent />\r\n        </Provider>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst AppTab = createStackNavigator();\r\n\r\nfunction AppContent() {\r\n    const [user, setUser] = useState(\"\");\r\n    const [isCliente, setIsCliente] = useState(false);\r\n    const [isRestaurante, setIsRestaurante] = useState(false);\r\n    const [isEstafeta, setIsEstafeta] = useState(false);\r\n    let logged = store.getState();\r\n    logged = logged.cartReducer.isLogged;\r\n    return (<>\r\n        {logged &&\r\n            <>\r\n                {isCliente &&\r\n                    <ClienteApp setIsLogged />\r\n                }\r\n                {isRestaurante &&\r\n                    <RestauranteApp restaurante={users[user]} setIsLogged />\r\n                }\r\n                {isEstafeta &&\r\n                    <EstafetaApp estafeta={users[user]} setIsLogged />\r\n                }\r\n            </>\r\n        }\r\n        {!logged &&\r\n            <Login user={user} setUser={setUser} setIsCliente={setIsCliente} setIsRestaurante={setIsRestaurante} setIsEstafeta={setIsEstafeta} />\r\n        }\r\n    </>);\r\n}\r\n\r\nfunction Login({ navigation, setIsLogged, setIsCliente, setIsRestaurante, setIsEstafeta, user, setUser }) {\r\n    const [password, setPassword] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.title}>Nutrilink</Text>\r\n            <View style={styles.loginContainer}>\r\n                <View style={styles.inputView}>\r\n                    <TextInput placeholder='Username' style={styles.input} onChangeText={username => setUser(username)} />\r\n                </View>\r\n                <View style={styles.inputView}>\r\n                    <TextInput placeholder='Password' style={styles.input} onChangeText={pass => setPassword(pass)} secureTextEntry />\r\n                </View>\r\n                <View style={styles.containerRow}>\r\n                    <TouchableOpacity style={styles.loginButtonContainer} onPress={() => {\r\n                        for (let typeUser of Object.keys(users))\r\n                            if (user === typeUser) {\r\n                                switch (users[user].type) {\r\n                                    case \"cliente\":\r\n                                        dispatch(setLogged(true));\r\n                                        setIsCliente(true);\r\n                                        break;\r\n                                    case \"restaurante\":\r\n                                        dispatch(setLogged(true));\r\n                                        setIsRestaurante(true);\r\n                                        break;\r\n                                    case \"estafeta\":\r\n                                        dispatch(setLogged(true));\r\n                                        setIsEstafeta(true);\r\n                                        break;\r\n                                    default:\r\n                                        break;\r\n                                }\r\n                            }\r\n                    }}>\r\n                        <Text style={styles.loginButtonText}>       Login       </Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.loginButtonContainer}>\r\n                        <Text style={styles.loginButtonText}>    Registar    </Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: 'darkcyan',\r\n        alignItems: 'center',\r\n        flex: 1\r\n\r\n    },\r\n    containerRow: {\r\n        paddingTop: 20,\r\n        flexDirection: 'row'\r\n    },\r\n    loginContainer: {\r\n        backgroundColor: 'darkcyan',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        flex: 1\r\n    },\r\n    title: {\r\n        borderTopWidth: 100,\r\n        borderTopColor: 'darkcyan',\r\n        fontSize: 40,\r\n        fontWeight: 'bold',\r\n        color: 'cornsilk'\r\n    },\r\n    inputView: {\r\n        borderBottomWidth: 10,\r\n        borderBottomColor: 'darkcyan'\r\n    },\r\n    input: {\r\n        backgroundColor: 'darkgray',\r\n        padding: 15,\r\n        borderRadius: 5,\r\n    },\r\n    loginButtonContainer: {\r\n        elevation: 8,\r\n        backgroundColor: \"#009688\",\r\n        borderRadius: 28,\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 12,\r\n    },\r\n    loginButtonText: {\r\n        fontSize: 18,\r\n        color: \"#fff\",\r\n        fontWeight: \"bold\",\r\n        alignSelf: \"center\",\r\n        textTransform: \"uppercase\"\r\n    }\r\n});","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/xmaspromo.1e866ef4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/newYearPromo.40cdf873.jpg\";"],"sourceRoot":""}