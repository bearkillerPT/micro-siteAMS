{"version":3,"sources":["assets/vegifruit.png","assets/greencity.png","assets/saladasmais.jpg","assets/sandesBase.jpg","assets/pratoCarne.jpg","assets/pratoPeixe.jpg","assets/xmaspromo.jpg","assets/newYearPromo.jpg","screens/AppCliente/Cart.js","assets/cartState.js","screens/AppCliente/RestauranteMenu.js","screens/AppCliente/Restaurantes.js","screens/AppCliente/RestauranteStack.js","screens/AppCliente/Home.js","screens/AppCliente/HomeStack.js","screens/AppCliente/AppClientes.js","screens/AppRestaurante/Pratos.js","screens/AppRestaurante/PratosStack.js","screens/AppRestaurante/Orders.js","screens/AppRestaurante/OrdersStack.js","screens/AppRestaurante/AppRestaurante.js","Store.js","screens/AppEstafeta/Orders.js","screens/AppEstafeta/OrdersStack.js","screens/AppEstafeta/Feedback.js","screens/AppEstafeta/FeedbackStack.js","screens/AppEstafeta/AppEstafeta.js","App.js","web-build/register-service-worker.js","assets/favicon.png","assets/quicheVegsGluten.jpg","assets/cremedeespinafres.jpg","assets/saladaqueijoserra.jpg"],"names":["module","exports","require","CartScreen","props","useState","cart","setCart","user","store","getState","cartReducer","useDispatch","getCart","useEffect","setTimeout","getTotal","res","Object","keys","prato","Preco","View","Text","style","styles","restaurantesOffer","TouchableOpacity","payButtonContainer","payButtonText","ScrollView","map","TouchableHighlight","underlayColor","button","key","containerRow","Image","image","source","getImageByName","containerColumn","Name","foodText","Opcoes","activeOpacity","delButton","onPress","db","ref","remove","once","then","val","name","size","Stack","createStackNavigator","Cart","route","Navigator","initialroute","screenOptions","headerTitleAlign","headerStyle","backgroundColor","headerTintColor","Screen","component","imageName","img","images","StyleSheet","create","flexDirection","paddingLeft","paddingBottom","fontSize","fontWeight","textAlign","color","padding","flex","justifyContent","alignSelf","width","height","elevation","borderRadius","paddingVertical","paddingHorizontal","textTransform","INITIAL_CART","restaurant","isLogged","setLogged","setUser","combineReducers","state","action","type","restauranteIn","restaurants","Pratos","payload","concat","filter","RestauranteMenu","restauranteName","params","restaurante","pratos","setPratos","console","log","Id","push","Home","navigation","setRestaurants","container","id","alignItems","username","bio","PricePoint","Tags","tag","RestauranteStack","restaurantes","restauranteMenu","initialParams","promos","setPromos","horizontal","restaurantesPromo","restaurantesTitle","restaurantesDescr","descr","Linking","openURL","HomeStack","home","Logout","Restart","Tab","createBottomTabNavigator","AppContent","dispatch","NavigationContainer","independent","initialRouteName","tabBarIcon","focused","iconName","tabBarOptions","activeTintColor","inactiveTintColor","setRestaurante","getRestaurante","length","a","async","PratosStack","Orders","pedidos","pedidoI","Morada","Status","Estafeta","tmpPedido","Restaurante","set","borderRightWidth","borderRightColor","App","RestaurantDishes","OrdersStack","configStore","createStore","setPedidos","estafeta","Feedback","averageR","count","feedback","rating","getAverageRate","pedido","readonly","startingValue","tintColor","imageSize","toFixed","imgVegifruit","imgGreenCity","imgSaladasmais","imgQuichVeg","imgCremeEspi","imgSaladaQSerra","imgSandesBase","imgPratoCarne","AppWraper","FeedbackStack","firebase","users","initializeApp","apiKey","authDomain","projectId","storageBucket","databaseURL","messagingSenderId","appId","measurementId","database","isCliente","setIsCliente","isRestaurante","setIsRestaurante","isEstafeta","setIsEstafeta","toRegister","setToRegister","logged","setIsLogged","Login","Register","password","setPassword","confPass","setConfPass","setUsers","title","loginContainer","inputView","TextInput","placeholder","input","onChangeText","pass","secureTextEntry","loginButtonContainer","tmpUsers","loginButtonText","paddingTop","borderTopWidth","borderTopColor","borderBottomWidth","borderBottomColor","navigator","window","addEventListener","serviceWorker","register","scope","info","catch","error"],"mappings":"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","file":"static/js/app.d6e7199a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/vegifruit.9cd2e61a.png\";","module.exports = __webpack_public_path__ + \"static/media/greencity.978665f2.png\";","module.exports = __webpack_public_path__ + \"static/media/saladasmais.0273522e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sandesBase.69a34ba3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pratoCarne.92d38d67.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pratoPeixe.20f9cfe0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/xmaspromo.1e866ef4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/newYearPromo.40cdf873.jpg\";","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { db, images, store } from '../../App';\r\nimport { StyleSheet, Text, View, ScrollView, Image, TouchableHighlight, TouchableOpacity } from 'react-native';\r\nvar imgQuichVeg = require('../../assets/quicheVegsGluten.jpg');\r\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\r\nvar imgCremeEspi = require('../../assets/cremedeespinafres.jpg');\r\nvar imgSaladaQSerra = require('../../assets/saladaqueijoserra.jpg');\r\n\r\n\r\nexport function CartScreen(props) {\r\n    const [cart, setCart] = useState({});\r\n    let user = store.getState().cartReducer.user;\r\n    const dispatch = useDispatch();\r\n    getCart(user, setCart);\r\n    useEffect(() => {\r\n        setTimeout(()=>getCart(user, setCart), 1000);\r\n        if(cart == null) setTimeout(()=>setCart({}), 1000);\r\n        \r\n    }, [cart])\r\n    const getTotal = () => {\r\n        if (cart == null) return 0;\r\n        let res = 0;\r\n        for (let prato of Object.keys(cart)) {\r\n            res += cart[prato].Preco;\r\n        }\r\n        return res;\r\n    }\r\n    if (cart == null) return (\r\n        <View>\r\n            <Text style={styles.restaurantesOffer}>Preço total: {getTotal()}€</Text>\r\n            <TouchableOpacity style={styles.payButtonContainer}>\r\n                <Text style={styles.payButtonText}>Pagar</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n    return (\r\n        <View>\r\n            <ScrollView>{\r\n                Object.keys(cart).map(prato => {\r\n                    return (\r\n                        <TouchableHighlight underlayColor={\"#DDDDDD\"} style={styles.button} key={prato} >\r\n                            <View style={styles.containerRow}>\r\n                                <View style={styles.containerRow}>\r\n                                    <Image style={styles.image} source={getImageByName(cart[prato].image)} />\r\n                                </View>\r\n                                <View style={styles.containerColumn}>\r\n                                    <Text style={styles.restaurantesOffer}>{cart[prato].Name}</Text>\r\n                                    <Text style={styles.foodText}>Opções : {cart[prato].Opcoes}\r\n                                        {\"\\n\"}\r\n                                Preço : {cart[prato].Preco} €</Text>\r\n                                </View>\r\n                                <TouchableHighlight underlayColor={\"#DDDDDD\"} activeOpacity={0.3} style={styles.delButton} onPress={() => {\r\n                                    db.ref(\"Users/\" + user + \"/cart/\" + prato).remove();\r\n                                    db.ref(\"Users/\" + user + \"/cart\").once('value').then(res => { setCart(res.val()) });\r\n\r\n                                }}>\r\n                                    <Icon name=\"delete\" size={25} />\r\n                                </TouchableHighlight>\r\n                            </View>\r\n\r\n                        </TouchableHighlight>\r\n\r\n                    );\r\n                })\r\n            }</ScrollView>\r\n            <Text style={styles.restaurantesOffer}>Preço total: {getTotal()}€</Text>\r\n            <TouchableOpacity style={styles.payButtonContainer}>\r\n                <Text style={styles.payButtonText}>Pagar</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n\r\n    );\r\n}\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nfunction getCart(user, setCart) {\r\n    db.ref(\"Users/\" + user + \"/cart\").once('value').then(res => { setCart(res.val()) });\r\n}\r\n\r\nexport default function Cart(route) {\r\n    return (\r\n        <Stack.Navigator initialroute={'Carrinho'} screenOptions={{ headerTitleAlign: 'center', headerStyle: { backgroundColor: 'darkcyan' }, headerTintColor: 'white' }}>\r\n            <Stack.Screen name=\"Carrinho\" component={CartScreen} />\r\n        </Stack.Navigator>);\r\n\r\n}\r\n\r\n\r\nconst getImageByName = (imageName) => {\r\n    let img = images[imageName]\r\n    if (img != null) return img\r\n    return images[\"default\"]\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => { return { cartList: state.cartReducer.cart } };\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        add: (prato) => dispatch({ type: \"addPrato\", prato: prato })\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    containerRow: {\r\n        flexDirection: 'row'\r\n    },\r\n    containerColumn: {\r\n        paddingLeft: 10,\r\n        paddingBottom: 10,\r\n        flexDirection: 'column'\r\n    },\r\n    restaurantesOffer: {\r\n        fontSize: 15,\r\n        fontWeight: 'bold',\r\n        textAlign: 'left',\r\n        color: 'black'\r\n    },\r\n    foodText: {\r\n        fontSize: 12,\r\n        textAlign: 'left',\r\n\r\n    },\r\n    button: {\r\n        padding: 7,\r\n        backgroundColor: \"#DDDDDD\",\r\n    },\r\n    delButton: {\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignSelf: 'center'\r\n\r\n    },\r\n    image: {\r\n        width: 150,\r\n        height: 100,\r\n    },\r\n    payButtonContainer: {\r\n        elevation: 8,\r\n        backgroundColor: \"#009688\",\r\n        borderRadius: 10,\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 12\r\n    },\r\n    payButtonText: {\r\n        fontSize: 18,\r\n        color: \"#fff\",\r\n        fontWeight: \"bold\",\r\n        alignSelf: \"center\",\r\n        textTransform: \"uppercase\"\r\n    }\r\n});","import { combineReducers } from 'redux';\r\nimport { restaurants } from '../screens/AppCliente/AppClientes';\r\nconst INITIAL_CART = {\r\n    cart: [],\r\n    restaurant: '',\r\n    isLogged: false,\r\n    user: ''\r\n}\r\n\r\nexport const setLogged = val => ({\r\n    'type': 'setLogged',\r\n    'payload': val\r\n});\r\n\r\nexport const setUser = val => ({\r\n    'type': 'setUser',\r\n    'payload': val\r\n});\r\n\r\nexport const addPrato = prato => ({\r\n    'type': 'addPrato',\r\n    'payload': prato\r\n});\r\n\r\nexport const delPrato = prato => ({\r\n    'type': 'delPrato',\r\n    'payload': prato\r\n});\r\n\r\nfunction cartReducer(state = INITIAL_CART, action) {\r\n    switch (action.type) {\r\n        case 'addPrato':\r\n            let restauranteIn = '';\r\n            for (let restaurant in restaurants) for (let prato in restaurant.Pratos) if (prato === action.payload) restauranteIn = restaurant.name;\r\n            if (state.restaurant != '') {\r\n                if (state.restaurant != restauranteIn) return;\r\n            }\r\n            return {\r\n                ...state,\r\n                cart: state.cart.concat(action.payload)\r\n            }\r\n        case 'delPrato':\r\n            return {\r\n                ...state,\r\n                cart: state.cart.filter(prato => prato !== action.payload)\r\n            }\r\n        case 'setLogged':\r\n            return {\r\n                ...state,\r\n                isLogged: action.payload\r\n            }\r\n        case 'setUser':\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default combineReducers({\r\n    cartReducer: cartReducer\r\n});\r\n","import React, { useState, useEffect, useContext, useCallback } from 'react';\nimport { StyleSheet, Text, View, ScrollView, Image, TouchableHighlight } from 'react-native';\nimport { useDispatch } from 'react-redux';\nimport { addPrato } from '../../assets/cartState';\nimport { db, images, store } from '../../App';\n\nexport default function RestauranteMenu({ route }) {\n    const restauranteName = route.params.restaurante[\"Name\"];\n    const [pratos, setPratos] = useState({});\n    const [cart, setCart] = useState([]);\n    \n    let user = store.getState().cartReducer.user; \n    useEffect(() => {\n        db.ref(\"restaurantes/\" + restauranteName + \"/Pratos\").once('value').then(res => setPratos(res.val()));\n    }, []);\n    const dispatch = useDispatch();\n    return (\n        <View style={{flex: 1}}>\n            <Text style={styles.restaurantesOffer}>Pratos Disponíveis:</Text>\n            <ScrollView>{\n                Object.keys(pratos).map(prato => {\n                    console.log(pratos[prato])\n                    return (\n                        <TouchableHighlight underlayColor={\"#DDDDDD\"} activeOpacity={0.3} style={styles.button} key={pratos[prato].Id} onPress={() => {                       \n                                db.ref('Users/' + user + \"/cart\").push(pratos[prato]);\n                            }}>\n                            <View style={styles.containerRow}>\n                                <Image style={styles.image} source={getImageByName(pratos[prato].image)} />\n                                <View style={styles.containerColumn}>\n                                    <Text style={styles.restaurantesOffer}>{pratos[prato].Name}</Text>\n                                    <Text style={styles.foodText}>Opções : {pratos[prato].Opcoes}\n                                        {\"\\n\"}\n                            Preço : {pratos[prato].Preco} €</Text>\n                                </View>\n                            </View>\n                        </TouchableHighlight>\n                    );\n                })\n            }</ScrollView>\n        </View>\n\n    );\n}\n\nconst getImageByName = (imageName) => {\n    let img = images[imageName]\n    if (img != null) return img\n    return images[\"default\"]\n}\n\nconst styles = StyleSheet.create({\n    containerRow: {\n        paddingBottom: 10,\n        flexDirection: 'row'\n    },\n    containerColumn: {\n        paddingLeft: 10,\n        paddingBottom: 10,\n        flexDirection: 'column'\n    },\n    restaurantesOffer: {\n        fontSize: 15,\n        fontWeight: 'bold',\n        textAlign: 'left',\n        color: 'black'\n    },\n    foodText: {\n        fontSize: 12,\n        textAlign: 'left',\n\n    },\n    button: {\n        padding: 7,\n    },\n    image: {\n        width: 150,\n        height: 100,\n    }\n});","import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, ScrollView, Image, TouchableHighlight } from 'react-native';\nimport {db, images} from '../../App';\n\nexport default function Home({ navigation, route }) {\n  const [restaurants, setRestaurants] = useState({});\n  useEffect(() => {\n    db.ref(\"restaurantes\").once('value').then(res => setRestaurants(res.val()));\n  }, []);\n  console.log(restaurants);\n  return (\n    <View style={{ flex: 1, padding: 20 }}>\n      <ScrollView style={styles.container}>{\n        Object.keys(restaurants).map(restaurante => {\n          return (\n            <TouchableHighlight underlayColor={\"#DDDDDD\"} activeOpacity={0.3} style={styles.button} key={restaurants[restaurante].id} onPress={() => navigation.push('Pratos', { restaurante: restaurants[restaurante] })}>\n              <View style={styles.restaurante}>\n                <Image source={getImageByName(restaurants[restaurante].image)} style={styles.image} />\n                <View style={{ flex: 1, flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'center' }}>\n                  <Text style={styles.username}>{restaurante}</Text>\n                  <Text style={styles.bio}>{restaurants[restaurante].PricePoint}{restaurants[restaurante].Tags.map(tag => \" ⸎ \" + tag)}</Text>\n                </View>\n              </View>\n            </TouchableHighlight>\n          )\n        })\n      }</ScrollView>\n    </View>\n  );\n}\n\nconst getImageByName = (imageName) => {\n  let img = images[imageName]\n  if (img != null) return img\n  return images[\"default\"]\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingBottom: 10,\n  },\n  restaurante: {\n    flexDirection: 'row',\n    paddingBottom: 10\n  },\n  username: {\n    fontSize: 15,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  bio: {\n    fontSize: 10,\n    padding: 5,\n    textAlign: 'left',\n    justifyContent: 'flex-start',\n  },\n  button: {\n    padding: 7,\n  },\n  image: {\n    width: 150,\n    height: 100,\n  }\n});","import React, { useState } from 'react';\nimport { StyleSheet } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport restauranteMenu from './RestauranteMenu';\nimport restaurantes from './Restaurantes';\n\n\n\nconst Stack = createStackNavigator();\nexport default function RestauranteStack(route) {\n  let restaurante = '';\n  console.log(route)\n  if(route.params)\n    restaurante = route.params.restaurante;\n  return (\n      <Stack.Navigator initialroute={'Restaurantes'} screenOptions={{headerTitleAlign: 'center' , headerStyle:{backgroundColor:'darkcyan'}, headerTintColor:'white'}} >\n        <Stack.Screen name=\"Restaurantes\" component={restaurantes} />\n        <Stack.Screen name=\"Pratos\" component={restauranteMenu}  initialParams={{restaurante: restaurante}}/>\n      </Stack.Navigator>\n      \n  );\n}\n\n\n\n\nconst styles = StyleSheet.create({\n  image: {\n    height: 300,\n  },\n});","import React, {useEffect, useState} from 'react';\nimport { StyleSheet, Text, View, ScrollView, Image, TouchableHighlight, Linking } from 'react-native';\nimport { db, images     } from '../../App';\nexport default function Home({ navigation, route }) {\n    const [restaurants, setRestaurants] = useState({});\n    const [promos, setPromos] = useState({});\n    useEffect(() => {\n      db.ref(\"restaurantes\").once('value').then(res => setRestaurants(res.val()));\n      db.ref(\"promos\").once('value').then(res => setPromos(res.val()));\n    }, []);\n    return (\n        <ScrollView style={{flex: 1}}>\n            <View style={{ flexDirection: 'column', flex: 1, padding: 20 }}>\n                <Text style={styles.restaurantesOffer}>\n                    Destaques:\n                </Text>\n                <ScrollView style={{ flexDirection: 'row', flex: 1 }} horizontal>{\n                    Object.keys(promos).map((restaurante) => {\n                        return (\n                            <View style={styles.restaurantesPromo}>\n                                <TouchableHighlight underlayColor='#DDDDD' activeOpacity={0.3} style={styles.button} key={promos[restaurante].id} onPress={() => {}}>\n                                    <View key={promos[restaurante].id} style={styles.restaurantesPromo}>{\n                                        <View style={{ flexDirection: 'column' }}>\n                                            <Image source={getImageByName(promos[restaurante].image)} style={styles.image} />\n                                            <Text style={styles.restaurantesTitle}>{promos[restaurante].Name}</Text>\n                                            <Text style={styles.restaurantesDescr}>{promos[restaurante].descr}</Text>\n                                        </View>\n                                    }</View>\n                                </TouchableHighlight>\n\n                            </View>)\n                    })\n                }</ScrollView>\n                <Text style={styles.restaurantesOffer}>\n                    Restaurantes favoritos:\n                </Text>\n                <ScrollView style={{ flexDirection: 'row', flex: 1 }} horizontal>{\n                    Object.keys(restaurants).map((restaurante) => {\n                        return (\n                            <View style={styles.restaurantesPromo}>\n                                <TouchableHighlight underlayColor='#DDDDD' activeOpacity={0.3} style={styles.button} key={restaurants[restaurante].id} onPress={() => navigation.push('Pratos', { restaurante: restaurants[restaurante] })}>\n                                    <View key={restaurants[restaurante].Id} style={styles.restaurantesPromo}>{\n                                        <View style={{ flexDirection: 'column' }}>\n                                            <Image source={getImageByName(restaurants[restaurante].image)} style={styles.image} />\n                                            <Text style={styles.restaurantesTitle}>{restaurants[restaurante].Name}</Text>\n                                        </View>\n                                    }</View>\n                                </TouchableHighlight>\n\n                            </View>)\n                    })\n                }</ScrollView>\n                <Text style={styles.restaurantesOffer}\n                    onPress={() => Linking.openURL('https://micro-site-ams.herokuapp.com/')}>\n                    Visite o nosso site!\n            </Text>\n            </View>\n        </ScrollView>\n    );\n}\n\n\nconst getImageByName = (imageName) => {\n    let img = images[imageName]\n    if (img != null) return img\n    return images[\"default\"]\n}\n\n\n\n\nconst styles = StyleSheet.create({\n    restaurantesPromo: {\n        flexDirection: 'column',\n        padding: 5,\n        width: 160,\n        height: 200,\n    },\n    image: {\n        width: 150,\n        height: 100,\n    },\n    restaurantesTitle: {\n        fontSize: 15,\n        fontWeight: 'bold',\n        textAlign: 'center',\n    },\n    restaurantesDescr: {\n        fontSize: 13,\n        textAlign: 'center',\n    },\n    restaurantesOffer: {\n        fontSize: 15,\n        fontWeight: 'bold',\n        textAlign: 'left',\n        color: 'black'\n    },\n    button: {\n        padding: 7,\n        height: 160,\n    },\n});","import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport home from './Home';\nimport restauranteMenu from './RestauranteMenu';\nconst Stack = createStackNavigator();\nexport default function HomeStack({route}) {\n  return (\n      <Stack.Navigator initialroute={'Home'} screenOptions={{headerTitleAlign: 'center', headerStyle:{backgroundColor:'darkcyan'},  headerTintColor:'white'}}>\n        <Stack.Screen name=\"Home\" component={home} />\n        <Stack.Screen name=\"Pratos\" component={restauranteMenu} />\n      </Stack.Navigator>\n  );\n}\n\n","import React, { useState } from 'react';\r\nimport {Restart} from 'fiction-expo-restart';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport Cart from '../AppCliente/Cart';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport Icon1 from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport Icon from 'react-native-vector-icons/Ionicons';\r\nimport { Provider } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setLogged } from '../../assets/cartState';\r\nimport {store} from '../../App';\r\nimport RestauranteStack from '../AppCliente/RestauranteStack';\r\nimport HomeStack from '../AppCliente/HomeStack';\r\nvar xmasPromo = require('../../assets/xmaspromo.jpg');\r\nvar newYearPromo = require('../../assets/newYearPromo.jpg');\r\nvar imgVegifruit = require('../../assets/vegifruit.png');\r\nvar imgGreenCity = require('../../assets/greencity.png');\r\nvar imgSaladasmais = require('../../assets/saladasmais.jpg');\r\nvar imgQuichVeg = require('../../assets/quicheVegsGluten.jpg');\r\nvar imgCremeEspi = require('../../assets/cremedeespinafres.jpg');\r\nvar imgSaladaQSerra = require('../../assets/saladaqueijoserra.jpg');\r\nvar imgSandesBase = require('../../assets/sandesBase.jpg');\r\nvar imgPratoCarne = require('../../assets/pratoCarne.jpg');\r\nvar imgPratoPeixe = require('../../assets/pratoPeixe.jpg');\r\n\r\n\r\nexport function Logout({navigation}) {\r\n\r\n  Restart();\r\n  return(<></>);\r\n}\r\n\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nexport default function AppContent() {\r\n  const dispatch = useDispatch();\r\n  dispatch(setLogged(false));\r\n  \r\n  let user = store.getState().cartReducer.user; \r\n  console.log(user)\r\n  return (\r\n    <NavigationContainer independent={true}>\r\n      <Tab.Navigator initialRouteName='Home' screenOptions={({ route }) => ({\r\n        tabBarIcon: ({ focused, color, size }) => {\r\n          let iconName;\r\n          if (route.name === 'Home') {\r\n            iconName = \"ios-home\";\r\n          } else if (route.name === 'Restaurantes') {\r\n            iconName = \"ios-restaurant\";\r\n          }\r\n          else if(route.name === \"Carrinho\")\r\n            iconName = \"md-cart\";\r\n          else\r\n            return <Icon1 name={\"logout\"} size={size} color={color} />;\r\n\r\n          // You can return any component that you like here!\r\n          return <Icon name={iconName} size={size} color={color} />;\r\n        },\r\n      })}\r\n        tabBarOptions={{\r\n          activeTintColor: 'tomato',\r\n          inactiveTintColor: 'gray',\r\n        }}>\r\n        <Tab.Screen name=\"Restaurantes\" component={RestauranteStack} />\r\n        <Tab.Screen name=\"Home\" component={HomeStack} />\r\n        <Tab.Screen name=\"Carrinho\" component={Cart} />\r\n        <Tab.Screen name=\"Logout\" component={Logout} />\r\n      </Tab.Navigator>\r\n    </NavigationContainer>);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect, useContext, useCallback } from 'react';\nimport { StyleSheet, Text, View, ScrollView, Image, TouchableHighlight } from 'react-native';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport { store, db, images} from '../../App';\nexport default function RestauranteMenu({ route }) {\n    //<Image so(urce={restaurante.image} style={styles.image}/>\n    let user = store.getState().cartReducer.user;\n    const [restaurante, setRestaurante] = useState(\"\");\n    const [restaurants, setRestaurants] = useState({});\n    getRestaurante(user, setRestaurante, setRestaurants);\n    if (restaurante == \"\" || Object.keys(restaurants).length == 0) return (<View><Text>Sorry</Text></View>);\n    return (\n        <View style={{flex: 1}}>\n            <Text style={styles.restaurantesOffer}>Pratos Disponibilizados:</Text>\n            <ScrollView>{\n                Object.keys(restaurants[restaurante].Pratos).map(prato => {\n                    return (\n                        <TouchableHighlight underlayColor={\"#DDDDDD\"} activeOpacity={0.3} style={styles.button} key={restaurants[restaurante].Pratos[prato].Id} onPress={() => { }}>\n                            <View style={styles.containerRow}>\n                                <View style={styles.containerRow}>\n                                    <Image style={styles.image} source={getImageByName(restaurants[restaurante].Pratos[prato].image)} />\n                                </View>\n                                <View style={styles.containerColumn}>\n                                    <Text style={styles.restaurantesOffer}>{restaurants[restaurante].Pratos[prato].Name}</Text>\n                                    <Text style={styles.foodText}>Opções : {restaurants[restaurante].Pratos[prato].Opcoes}\n                                        {\"\\n\"}\n                                Preço : {restaurants[restaurante].Pratos[prato].Preco} €</Text>\n                                </View>\n                                <TouchableHighlight underlayColor={\"#DDDDDD\"} activeOpacity={0.3} style={styles.delButton} onPress={() => {\n                                    db.ref(\"restaurantes/\" + restaurante + \"/Pratos/\" + prato).remove();\n                                    getRestaurante(user, setRestaurante, setRestaurants);\n                                }}>\n                                    <Icon name=\"delete\" size={25} />\n                                </TouchableHighlight>\n                            </View>\n                        </TouchableHighlight>\n                    );\n                })\n            }</ScrollView>\n        </View>\n\n    );\n}\n\nconst getImageByName = (imageName) => {\n    let img = images[imageName]\n    if (img != null) return img\n    return images[\"default\"]\n}\n\nasync function getRestaurante(user, setRestaurante, setRestaurants) {\n    await db.ref(\"Users/\" + user).once('value').then(res => setRestaurante(res.val()[\"restaurante\"]));\n    await db.ref(\"restaurantes\").once('value').then(res => setRestaurants(res.val()));\n}\n\nconst styles = StyleSheet.create({\n    containerRow: {\n        paddingBottom: 10,\n        flexDirection: 'row'\n    },\n    containerColumn: {\n        paddingLeft: 10,\n        paddingBottom: 10,\n        flexDirection: 'column'\n    },\n    restaurantesOffer: {\n        fontSize: 15,\n        fontWeight: 'bold',\n        textAlign: 'left',\n        color: 'black'\n    },\n    foodText: {\n        fontSize: 12,\n        textAlign: 'left',\n\n    },\n    button: {\n        padding: 7,\n    },\n    image: {\n        width: 150,\n        height: 100,\n    },\n    delButton: {\n        flex: 1,\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignSelf: 'auto'\n\n    },\n});","import React from 'react';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport Pratos from './Pratos';\r\nconst Stack = createStackNavigator();\r\nexport default function PratosStack({route}) {\r\n    return (\r\n        <Stack.Navigator initialroute={'Pratos'} screenOptions={{ headerTitleAlign: 'center', headerStyle: { backgroundColor: 'darkcyan' }, headerTintColor: 'white' }}>\r\n            <Stack.Screen name=\"Pratos\" component={Pratos} />\r\n        </Stack.Navigator>\r\n\r\n\r\n    );\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport Icon from 'react-native-vector-icons/Ionicons';\r\nimport Icon2 from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport { StyleSheet, Text, View, ScrollView, Image, TouchableHighlight } from 'react-native';\r\nimport { store, db, images } from '../../App';\r\n\r\nexport default function Orders({ route }) {\r\n    let user = store.getState().cartReducer.user;\r\n    const [restaurante, setRestaurante] = useState(\"\");\r\n    const [restaurants, setRestaurants] = useState({});\r\n    getRestaurante(user, setRestaurante, setRestaurants);\r\n    if (restaurante == \"\" || Object.keys(restaurants).length == 0) return (<View><Text>Sorry</Text></View>);\r\n    return (\r\n        <View style={{flex: 1}}>\r\n            <Text style={styles.restaurantesOffer}>Pedidos:</Text>\r\n            <ScrollView>{\r\n                Object.keys(restaurants[restaurante].pedidos).map(pedidoI => {\r\n                    return (\r\n                        <View style={styles.button} key={restaurants[restaurante].pedidos[pedidoI].Id}>\r\n                            <View style={styles.containerRow}>\r\n                                <Icon2 name=\"new-box\" size={50} style={{alignSelf:'center', paddingHorizontal: 20}}/>\r\n                                <View style={styles.containerColumn}>\r\n                                    <Text style={styles.restaurantesOffer}>{restaurants[restaurante].pedidos[pedidoI].Morada}</Text>\r\n                                    <Text style={styles.foodText}>Pratos : </Text>\r\n                                    <View style={styles.containerRow}>{\r\n                                        restaurants[restaurante].pedidos[pedidoI].Pratos.map(\r\n                                        (prato) => {return(\r\n                                        <View key={restaurants[restaurante].pedidos[pedidoI].Id}>\r\n                                            <Text style={{paddingLeft:10}}>{prato}</Text>\r\n                                        </View>);}\r\n                                        )\r\n                                    }\r\n                                    </View>\r\n                                    <View style={styles.containerRow}>\r\n                                        <Text>Status:{'\\n'}</Text>\r\n                                        <Text style={{paddingLeft: 10}}>{restaurants[restaurante].pedidos[pedidoI].Status}</Text>\r\n                                    </View>\r\n                                    {restaurants[restaurante].pedidos[pedidoI].Estafeta &&\r\n                                    <View style={styles.containerRow}>\r\n                                        <Text>Estafeta:{'\\n'}</Text>\r\n                                        <Text style={{paddingLeft: 10}}>{restaurants[restaurante].pedidos[pedidoI].Estafeta}</Text>\r\n                                    </View>\r\n                                    }\r\n                                    <View style={styles.containerRow}>\r\n                                        {!restaurants[restaurante].pedidos[pedidoI].Estafeta && <TouchableHighlight underlayColor={\"#DDDDDD\"} activeOpacity={0.3} style={styles.button} onPress={() => {\r\n                                            let tmpPedido = restaurants[restaurante].pedidos[pedidoI]\r\n                                            tmpPedido.Status=\"waiting\";\r\n                                            tmpPedido.Restaurante=restaurante;\r\n                                            db.ref(\"restaurantes/\" + restaurante + \"/pedidos/\" + pedidoI).set( tmpPedido)\r\n                                            db.ref(\"Pedidos\").push(restaurants[restaurante].pedidos[pedidoI]);\r\n                                         }}>\r\n                                            <Icon2 name=\"check-bold\" size={15} style={{ borderRightWidth: 5, borderRightColor: 'rgba(0,0,0,0)' }} />\r\n                                        </TouchableHighlight>}\r\n                                        <TouchableHighlight underlayColor={\"#DDDDDD\"} activeOpacity={0.3} style={styles.button} onPress={() => {\r\n                                            db.ref(\"restaurantes/\" + restaurante + \"/pedidos/\" + pedidoI).remove();\r\n                                         }}>\r\n                                            <Icon2 name=\"delete\" size={15} />\r\n                                        </TouchableHighlight>\r\n                                    </View>\r\n                                </View>\r\n                            </View>\r\n                        </View>\r\n                    );\r\n                })\r\n            }</ScrollView>\r\n        </View>\r\n\r\n    );\r\n}\r\n\r\n\r\nasync function getRestaurante(user, setRestaurante, setRestaurants) {\r\n    await db.ref(\"Users/\" + user).once('value').then(res => setRestaurante(res.val()[\"restaurante\"]));\r\n    await db.ref(\"restaurantes\").once('value').then(res => setRestaurants(res.val()));\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    containerRow: {\r\n        paddingBottom: 10,\r\n        flexDirection: 'row'\r\n    },\r\n    containerColumn: {\r\n        paddingLeft: 10,\r\n        paddingBottom: 10,\r\n        flexDirection: 'column'\r\n    },\r\n    restaurantesOffer: {\r\n        fontSize: 15,\r\n        fontWeight: 'bold',\r\n        textAlign: 'left',\r\n        color: 'black'\r\n    },\r\n    foodText: {\r\n        fontSize: 12,\r\n        textAlign: 'left',\r\n\r\n    },\r\n    button: {\r\n        padding: 7,\r\n    },\r\n    image: {\r\n        width: 150,\r\n        height: 100,\r\n    }\r\n});\r\n","import React from 'react';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport Orders from './Orders';\r\nconst Stack = createStackNavigator();\r\nexport default function PratosStack({route}) {\r\n\r\n    return (\r\n        <Stack.Navigator initialroute={'Orders'} screenOptions={{ headerTitleAlign: 'center', headerStyle: { backgroundColor: 'darkcyan' }, headerTintColor: 'white' }}>\r\n            <Stack.Screen name=\"Pedidos\" component={Orders} />\r\n        </Stack.Navigator>\r\n\r\n\r\n    );\r\n}\r\n\r\n","import React, { useState } from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Icon1 from 'react-native-vector-icons/MaterialCommunityIcons';\nimport Icon from 'react-native-vector-icons/Ionicons';\nimport RestaurantDishes from './PratosStack';\nimport OrdersStack from './OrdersStack';\nimport {Restart} from 'fiction-expo-restart';\nimport {db} from '../../App';\nimport { setLogged } from '../../assets/cartState';\nimport { useDispatch } from 'react-redux';\nvar imgVegifruit = require('../../assets/vegifruit.png');\nvar imgGreenCity = require('../../assets/greencity.png');\nvar imgSaladasmais = require('../../assets/saladasmais.jpg');\nvar imgQuichVeg = require('../../assets/quicheVegsGluten.jpg');\nvar imgCremeEspi = require('../../assets/cremedeespinafres.jpg');\nvar imgSaladaQSerra = require('../../assets/saladaqueijoserra.jpg');\nvar imgSandesBase = require('../../assets/sandesBase.jpg');\nvar imgPratoCarne = require('../../assets/pratoCarne.jpg');\nvar imgPratoPeixe = require('../../assets/pratoPeixe.jpg');\n\n\nconst Tab = createBottomTabNavigator();\n\nexport default function App() {\n  const dispatch = useDispatch();\n  dispatch(setLogged(false));\n  return (\n    <NavigationContainer independent={true}>\n      <Tab.Navigator initialRouteName='Restaurante' screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n          if (route.name === 'Restaurante') {\n            return <Icon name={\"ios-restaurant\"} size={size} color={color} />;\n          }\n          else if (route.name === \"Pedidos\")\n            return <Icon1 name={\"food\"} size={size} color={color} />;\n          else \n            return <Icon1 name={\"logout\"} size={size} color={color} />;\n        },\n      })}\n        tabBarOptions={{\n          activeTintColor: 'tomato',\n          inactiveTintColor: 'gray',\n        }}>\n        <Tab.Screen name=\"Restaurante\" component={RestaurantDishes}/>\n        <Tab.Screen name=\"Pedidos\" component={OrdersStack}/>\n        <Tab.Screen name=\"Logout\" component={Logout}/>\n      </Tab.Navigator>\n    </NavigationContainer>);\n}\n\n\nexport function Logout({navigation}) {\n\n  Restart();\n  return(<></>);\n}\n\n\n\n\n","import {createStore} from 'redux';\r\nimport cartReducer from './assets/cartState';\r\n\r\nconst configStore = () => {return createStore(cartReducer);}\r\nexport default configStore;","\r\nimport React, { useState, useEffect } from 'react';\r\nimport Icon from 'react-native-vector-icons/Ionicons';\r\nimport Icon2 from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport { StyleSheet, Text, View, ScrollView, Image, TouchableHighlight, Button } from 'react-native';\r\nimport { store, db, images } from '../../App';\r\n\r\nexport default function Orders({ route }) {\r\n    let user = store.getState().cartReducer.user;\r\n    const [pedidos, setPedidos] = useState({});\r\n    getRestaurante(user, setPedidos);\r\n    if (pedidos == null || Object.keys(pedidos).length == 0) return (<View><Text style={styles.restaurantesOffer}>Não há pedidos de momento!</Text></View>);\r\n    return (\r\n        <View style={{flex: 1}}>\r\n            <Text style={styles.restaurantesOffer}>Pedidos:</Text>\r\n            <ScrollView>{\r\n                Object.keys(pedidos).map(pedidoI => {\r\n                    return (\r\n                        <View style={styles.button} key={pedidos[pedidoI].Id}>\r\n                            <View style={styles.containerRow}>\r\n                                <Icon2 name=\"new-box\" size={50} style={{ alignSelf: 'center', paddingHorizontal: 20 }} />\r\n                                <View style={styles.containerColumn}>\r\n                                    <Text style={styles.restaurantesOffer}>{pedidos[pedidoI].Morada}</Text>\r\n                                    <Text style={styles.foodText}>Pratos : </Text>\r\n                                    <View style={styles.containerRow}>{\r\n                                        pedidos[pedidoI].Pratos.map(\r\n                                            (prato) => {\r\n                                                return (\r\n                                                    <View key={pedidos[pedidoI].Id}>\r\n                                                        <Text style={{ paddingLeft: 10 }}>{prato}</Text>\r\n                                                    </View>);\r\n                                            }\r\n                                        )\r\n                                    }\r\n                                    </View>\r\n                                    <View style={styles.containerRow}>\r\n                                        <Text>Status:{'\\n'}</Text>\r\n                                        <Text style={{ paddingLeft: 10 }}>{pedidos[pedidoI].Status}</Text>\r\n                                    </View>\r\n                                    {pedidos[pedidoI].Restaurante &&\r\n                                        <View style={styles.containerRow}>\r\n                                            <Text>Restaurante:{'\\n'}</Text>\r\n                                            <Text style={{ paddingLeft: 10 }}>{pedidos[pedidoI].Restaurante}</Text>\r\n                                        </View>\r\n                                    }\r\n                                    {pedidos[pedidoI].Estafeta &&\r\n                                        <View style={styles.containerRow}>\r\n                                            <Text>Estafeta:{'\\n'}</Text>\r\n                                            <Text style={{ paddingLeft: 10 }}>{pedidos[pedidoI].Estafeta}</Text>\r\n                                        </View>\r\n                                    }\r\n                                    <View style={styles.containerRow}>\r\n                                        {!pedidos[pedidoI].Estafeta && <TouchableHighlight underlayColor={\"#DDDDDD\"} activeOpacity={0.3} style={styles.button} onPress={() => {\r\n                                            let tmpPedido = pedidos[pedidoI]\r\n                                            tmpPedido.Status = \"A entregar\";\r\n                                            tmpPedido.Estafeta = user;\r\n                                            db.ref(\"/Pedidos/\" + pedidoI).set(tmpPedido);\r\n                                            db.ref(\"/restaurantes/\" + pedidos[pedidoI].Restaurante + \"/pedidos/\" + pedidos[pedidoI].Id).set(tmpPedido);\r\n                                        }}>\r\n                                            <Icon2 name=\"check-bold\" size={15} style={{ borderRightWidth: 5, borderRightColor: 'rgba(0,0,0,0)' }} />\r\n                                        </TouchableHighlight>}\r\n                                        {pedidos[pedidoI].Estafeta && pedidos[pedidoI].Status != \"Entregue\" && <TouchableHighlight underlayColor={\"#DDDDDD\"} activeOpacity={0.3} style={styles.button} onPress={() => {\r\n                                            let tmpPedido = pedidos[pedidoI]\r\n                                            tmpPedido.Status = \"Entregue\";\r\n                                            db.ref(\"/Pedidos/\" + pedidoI).set(tmpPedido);\r\n                                            db.ref(\"/restaurantes/\" + pedidos[pedidoI].Restaurante + \"/pedidos/\" + pedidos[pedidoI].Id).set(tmpPedido);\r\n                                        }}>\r\n                                            <Text>Finalizar Encomenda!</Text>\r\n                                        </TouchableHighlight>}\r\n                                    </View>\r\n                                </View>\r\n                            </View>\r\n                        </View>\r\n                    );\r\n                })\r\n            }</ScrollView>\r\n        </View>\r\n\r\n    );\r\n}\r\n\r\n\r\nasync function getRestaurante(user, setPedidos) {\r\n    await db.ref(\"Pedidos\").once('value').then(res => { setPedidos(res.val()); });\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    containerRow: {\r\n        paddingBottom: 10,\r\n        flexDirection: 'row'\r\n    },\r\n    containerColumn: {\r\n        paddingLeft: 10,\r\n        paddingBottom: 10,\r\n        flexDirection: 'column'\r\n    },\r\n    restaurantesOffer: {\r\n        fontSize: 15,\r\n        fontWeight: 'bold',\r\n        textAlign: 'left',\r\n        color: 'black'\r\n    },\r\n    foodText: {\r\n        fontSize: 12,\r\n        textAlign: 'left',\r\n\r\n    },\r\n    button: {\r\n        padding: 7,\r\n    },\r\n    image: {\r\n        width: 150,\r\n        height: 100,\r\n    }\r\n});","import React from 'react';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport Orders from './Orders';\r\nconst Stack = createStackNavigator();\r\nexport default function PratosStack({route}) {\r\n    let estafeta = '';\r\n    if (route.params)\r\n        estafeta = route.params.estafeta;\r\n\r\n    return (\r\n        <Stack.Navigator initialroute={'Orders'} screenOptions={{ headerTitleAlign: 'center', headerStyle: { backgroundColor: 'darkcyan' }, headerTintColor: 'white' }}>\r\n            <Stack.Screen name=\"Pedidos\" component={Orders} initialParams={estafeta = { estafeta }} />\r\n        </Stack.Navigator>\r\n\r\n\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\nimport { Rating } from 'react-native-ratings';\r\nimport { StyleSheet, Text, View, ScrollView, Image, TouchableHighlight } from 'react-native';\r\nimport { restaurants } from './AppEstafeta';\r\nexport default function Feedback({ route }) {\r\n    //<Image so(urce={restaurante.image} style={styles.image}/>\r\n    console.log(route);\r\n    const estafeta = route.params.estafeta;\r\n    const getAverageRate = () => {\r\n        let res = 0;\r\n        let count = 0;\r\n        for (let feedback of estafeta.feedback) {\r\n            console.log(feedback);\r\n            res += feedback.rating;\r\n            count += 1;\r\n        }\r\n        return (1.0 * res / count);\r\n    }\r\n    const averageR = getAverageRate();\r\n    console.log(averageR);\r\n    return (\r\n        <View>\r\n            <Text style={styles.restaurantesOffer}>Feedback das entregas:</Text>\r\n            <ScrollView>{\r\n                estafeta.feedback.map(pedido => {\r\n                    return (\r\n                        <View style={styles.button} key={pedido.id}>\r\n                            <View style={styles.containerRow}>\r\n                                <Image style={styles.image} source={restaurants[pedido.restaurante].image} />\r\n                                <View style={styles.containerColumn}>\r\n                                    <Text style={styles.restaurantesOffer}>{pedido.restaurante}</Text>\r\n                                    <Text style={styles.foodText}>Rating:\r\n                                    {'\\n'} </Text>\r\n                                    <Rating\r\n                                        type='star'\r\n                                        readonly\r\n                                        startingValue={pedido.rating}\r\n                                        tintColor='rgb(242,242,242)'\r\n                                        style={styles.rating}\r\n                                        imageSize={15}\r\n                                    />\r\n                                </View>\r\n                            </View>\r\n                        </View>\r\n                    );\r\n                })\r\n            }\r\n                <View>\r\n                    <Text style={styles.restaurantesOffer}>Average Rating: </Text>\r\n                    <View style={styles.containerRow}>\r\n                        <Rating\r\n                            type='star'\r\n                            readonly\r\n                            tintColor='rgb(242,242,242)'\r\n                            startingValue={averageR}\r\n                        />\r\n                        <Text style={{\r\n                            fontSize: 15,\r\n                            fontWeight: 'bold',\r\n                            textAlign: 'left',\r\n                            color: 'black',\r\n                            alignSelf: 'center'\r\n                        }}>{averageR.toFixed(2)}/5!</Text>\r\n                    </View>\r\n                </View>\r\n            </ScrollView>\r\n        </View >\r\n\r\n    );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    containerRow: {\r\n        paddingBottom: 10,\r\n        flexDirection: 'row'\r\n    },\r\n    containerColumn: {\r\n        paddingLeft: 10,\r\n        paddingBottom: 10,\r\n        flexDirection: 'column'\r\n    },\r\n    restaurantesOffer: {\r\n        fontSize: 15,\r\n        fontWeight: 'bold',\r\n        textAlign: 'left',\r\n        color: 'black'\r\n    },\r\n    foodText: {\r\n        fontSize: 12,\r\n        textAlign: 'left',\r\n\r\n    },\r\n    button: {\r\n        padding: 5,\r\n        borderRadius: 13\r\n    },\r\n    image: {\r\n        width: 150,\r\n        height: 100,\r\n    },\r\n    rating: {\r\n        borderRightWidth: 500,\r\n        borderRightColor: 'rgba(0,0,0,0)',\r\n    }\r\n});","import React from 'react';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport Feedback from './Feedback';\r\nconst Stack = createStackNavigator();\r\nexport default function PratosStack({route}) {\r\n    let estafeta = '';\r\n    if (route.params)\r\n        estafeta = route.params.estafeta;\r\n\r\n    return (\r\n        <Stack.Navigator initialroute={'Feedback'} screenOptions={{ headerTitleAlign: 'center', headerStyle: { backgroundColor: 'darkcyan' }, headerTintColor: 'white' }}>\r\n            <Stack.Screen name=\"Feedback\" component={Feedback} initialParams={estafeta} />\r\n        </Stack.Navigator>\r\n\r\n\r\n    );\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport configStore from '../../Store';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport Icon1 from 'react-native-vector-icons/Ionicons';\r\nimport Icon2 from 'react-native-vector-icons/MaterialIcons';\r\nimport Icon3 from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport OrdersStack from './OrdersStack';\r\nimport {Restart} from 'fiction-expo-restart';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setLogged } from '../../assets/cartState';\r\nimport FeedbackStack from './FeedbackStack';\r\nvar imgVegifruit = require('../../assets/vegifruit.png');\r\nvar imgGreenCity = require('../../assets/greencity.png');\r\nvar imgSaladasmais = require('../../assets/saladasmais.jpg');\r\nvar imgQuichVeg = require('../../assets/quicheVegsGluten.jpg');\r\nvar imgCremeEspi = require('../../assets/cremedeespinafres.jpg');\r\nvar imgSaladaQSerra = require('../../assets/saladaqueijoserra.jpg');\r\nvar imgSandesBase = require('../../assets/sandesBase.jpg');\r\nvar imgPratoCarne = require('../../assets/pratoCarne.jpg');\r\nvar imgPratoPeixe = require('../../assets/pratoPeixe.jpg');\r\n\r\nexport const restaurants = {\r\n  \"Vegifruit\": {\r\n    \"name\": \"Vegifruit\",\r\n    \"id\": 0,\r\n    \"PricePoint\": \"€\",\r\n    \"Address\": \"Rua de São Sebastião, 122 3810 - 187 Aveiro\",\r\n    \"Tags\": [\"Vegan\", \"Saladas\", \"Biologico\"],\r\n    \"Pratos\": {\r\n      \"Salada de queijo da serra\": {\r\n        \"name\": \"Salada de queijo da serra\",\r\n        \"id\": 0,\r\n        \"Preço\": 7,\r\n        \"Opçoes\": [\"Extra azeitonas\"],\r\n        \"image\": imgSaladaQSerra\r\n      },\r\n      \"Quiche Vegetariana s/Glúten\": {\r\n        \"name\": \"Quiche Vegetariana s/Glúten\",\r\n        \"id\": 1,\r\n        \"Preço\": 6.5,\r\n        \"Opções\": [],\r\n        \"image\": imgQuichVeg,\r\n      },\r\n      \"Creme de espinafres\": {\r\n        \"name\": \"Creme de espinafres\",\r\n        \"id\": 2,\r\n        \"Preço\": 6.5,\r\n        \"Opções\": [],\r\n        \"image\": imgCremeEspi,\r\n      },\r\n\r\n    },\r\n    \"image\": imgVegifruit,\r\n  },\r\n  \"Green City quiches & saladas, co.\": {\r\n    \"name\": \"Green City quiches & saladas, co.\",\r\n    \"id\": 1,\r\n    \"PricePoint\": \"€\",\r\n    \"Address\": \"R. de Castro Matoso 28 A, 3810-079 Aveiro\",\r\n    \"Tags\": [\"Vegan\", \"Saladas\", \"Quiches\", \"Biologico\"],\r\n    \"Pratos\": {\r\n      \"Quiche especial\": {\r\n        \"name\": \"Quiche especial\",\r\n        \"id\": 0,\r\n        \"Preço\": 6,\r\n        \"Opçoes\": [\"Tamanho grande\"],\r\n        \"image\": imgGreenCity\r\n      }\r\n    },\r\n    \"image\": imgGreenCity,\r\n  },\r\n  \"Saladas+\": {\r\n    \"name\": \"Saladas+\",\r\n    \"id\": 2,\r\n    \"PricePoint\": \"€\",\r\n    \"Address\": \"R. de São Sebastião 31, 3810-187 Aveiro\",\r\n    \"Tags\": [\"Vegan\", \"Saladas\", , \"Biologico\"],\r\n    \"Pratos\": {\r\n      \"Sandes Base\": {\r\n        \"name\": \"Sandes Base\",\r\n        \"id\": 0,\r\n        \"Preço\": 3.10,\r\n        \"Opçoes\": [\"Extra ovo\"],\r\n        \"image\": imgSandesBase\r\n      },\r\n\r\n      \"Prato do dia Peixe\": {\r\n        \"name\": \"Prato do dia Peixe\",\r\n        \"id\": 1,\r\n        \"Preço\": 7.45,\r\n        \"Opçoes\": [\"Extra tempero\"],\r\n        \"image\": imgPratoPeixe\r\n      },\r\n\r\n      \"Prato do dia Carne\": {\r\n        \"name\": \"Prato do dia Carne\",\r\n        \"id\": 2,\r\n        \"Preço\": 7.45,\r\n        \"Opçoes\": [\"Extra acompanhamento\"],\r\n        \"image\": imgPratoCarne\r\n      }\r\n    },\r\n    \"image\": imgSaladasmais,\r\n  },\r\n}\r\n\r\n\r\n\r\nconst store = configStore();\r\n\r\n\r\nexport default function AppWraper(route) {\r\n  return(\r\n    <Provider store={store}>\r\n      <App restaurante={route}/>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nfunction App({restaurante}) {\r\n  const dispatch = useDispatch();\r\n  let estafeta = restaurante.estafeta;\r\n  dispatch(setLogged(false));\r\n  return (\r\n    <NavigationContainer independent={true}>\r\n      <Tab.Navigator initialRouteName='Pedidos' screenOptions={({ route }) => ({\r\n        \r\n        tabBarIcon: ({ focused, color, size }) => {\r\n          if (route.name === 'Pedidos') \r\n            return <Icon1 name={\"ios-restaurant\"} size={size} color={color} />;\r\n\r\n          else if (route.name === 'Feedback')\r\n            return <Icon2 name={\"feedback\"} size={size} color={color} />;\r\n\r\n          else \r\n            return <Icon3 name={\"logout\"} size={size} color={color} />;\r\n          \r\n        },\r\n      })}\r\n        tabBarOptions={{\r\n          activeTintColor: 'tomato',\r\n          inactiveTintColor: 'gray',\r\n        }}>\r\n        <Tab.Screen name=\"Pedidos\" component={OrdersStack} initialParams={estafeta={estafeta}}/>\r\n        <Tab.Screen name=\"Feedback\" component={FeedbackStack} initialParams={estafeta={estafeta}}/>\r\n        <Tab.Screen name=\"Logout\" component={Logout}/>\r\n      </Tab.Navigator>\r\n    </NavigationContainer>);\r\n}\r\n\r\n\r\n\r\nexport function Logout({navigation}) {\r\n\r\n  Restart();\r\n  return(<></>);\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { TextInput, StyleSheet, View, Text, TouchableOpacity } from 'react-native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport ClienteApp from './screens/AppCliente/AppClientes';\r\nimport RestauranteApp from './screens/AppRestaurante/AppRestaurante';\r\nimport { setLogged, setUser } from './assets/cartState';\r\nimport EstafetaApp from './screens/AppEstafeta/AppEstafeta';\r\nimport { Provider } from 'react-redux';\r\nimport configStore from './Store';\r\nimport { useDispatch } from 'react-redux';\r\nimport { database } from 'firebase/app';\r\nimport { Restart } from 'fiction-expo-restart';\r\nvar firebase = require('firebase/app');\r\nrequire('firebase/database');\r\nvar xmasPromo = require('./assets/xmaspromo.jpg');\r\nvar newYearPromo = require('./assets/newYearPromo.jpg');\r\nvar imgVegifruit = require('./assets/vegifruit.png');\r\nvar imgGreenCity = require('./assets/greencity.png');\r\nvar imgSaladasmais = require('./assets/saladasmais.jpg');\r\nvar imgQuichVeg = require('./assets/quicheVegsGluten.jpg');\r\nvar imgCremeEspi = require('./assets/cremedeespinafres.jpg');\r\nvar imgSaladaQSerra = require('./assets/saladaqueijoserra.jpg');\r\nvar imgSandesBase = require('./assets/sandesBase.jpg');\r\nvar imgPratoCarne = require('./assets/pratoCarne.jpg');\r\nvar imgPratoPeixe = require('./assets/pratoPeixe.jpg');\r\nvar favicon = require('./assets/favicon.png');\r\nexport const images = {\r\n    \"xmasPromo\": xmasPromo,\r\n    \"newYearPromo\": newYearPromo,\r\n    \"imgVegifruit\": imgVegifruit,\r\n    \"imgGreenCity\": imgGreenCity,\r\n    \"imgSaladasmais\": imgSaladasmais,\r\n    \"imgQuichVeg\": imgQuichVeg,\r\n    \"imgCremeEspi\": imgCremeEspi,\r\n    \"imgSaladaQSerra\": imgSaladaQSerra,\r\n    \"imgSandesBase\": imgSandesBase,\r\n    \"imgPratoCarne\": imgPratoCarne,\r\n    \"imgPratoPeixe\": imgPratoPeixe,\r\n    \"default\": favicon\r\n}\r\n\r\nconst users = {\r\n    \"cliente\": {\r\n        \"type\": \"cliente\",\r\n        \"password\": \"cliente\",\r\n    },\r\n    \"restaurante\": {\r\n        \"type\": \"restaurante\",\r\n        \"password\": \"restaurante\",\r\n        \"restaurante\": \"Vegifruit\"\r\n    },\r\n    \"estafeta\": {\r\n        \"type\": \"estafeta\",\r\n        \"password\": \"estafeta\",\r\n        \"feedback\": [\r\n            {\r\n                \"id\": 1,\r\n                \"restaurante\": \"Vegifruit\",\r\n                \"rating\": 5\r\n            },\r\n            {\r\n                \"id\": 2,\r\n                \"restaurante\": \"Saladas+\",\r\n                \"rating\": 4\r\n            },\r\n            {\r\n                \"id\": 3,\r\n                \"restaurante\": \"Green City quiches & saladas, co.\",\r\n                \"rating\": 4\r\n            },\r\n        ],\r\n        \"pedidos\": [\r\n            {\r\n                \"id\": 1,\r\n                \"restaurante\": \"Saladas+\",\r\n                \"prato\": \"Prato do dia Peixe\",\r\n                \"morada\": \"Universidade de Aveiro, DECA\"\r\n            },\r\n\r\n            {\r\n                \"id\": 2,\r\n                \"restaurante\": \"Vegifruit\",\r\n                \"prato\": \"Salada de queijo da serra\",\r\n                \"morada\": \"Universidade de Aveiro, DETI\"\r\n            },\r\n            {\r\n                \"id\": 3,\r\n                \"restaurante\": \"Green City quiches & saladas, co.\",\r\n                \"prato\": \"Quiche especial\",\r\n                \"morada\": \"Universidade de Aveiro, CP\"\r\n            },\r\n        ]\r\n    },\r\n}\r\nexport const store = configStore();\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDNVW5qZxXnfqYfnNUvpFUH9dAeQfRmHu4\",\r\n    authDomain: \"appams-f22a3.firebaseapp.com\",\r\n    projectId: \"appams-f22a3\",\r\n    storageBucket: \"appams-f22a3.appspot.com\",\r\n    databaseURL: \"https://appams-f22a3-default-rtdb.firebaseio.com/\",\r\n    messagingSenderId: \"184182571952\",\r\n    appId: \"1:184182571952:web:576eed43083fbf07fc8c75\",\r\n    measurementId: \"G-CHN6Z9P409\"\r\n};\r\n// Initialize Firebase\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const db = firebase.database();\r\nexport default function AppWraper(route) {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppContent />\r\n        </Provider>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst AppTab = createStackNavigator();\r\n\r\nfunction AppContent() {\r\n    const [isCliente, setIsCliente] = useState(false);\r\n    const [isRestaurante, setIsRestaurante] = useState(false);\r\n    const [isEstafeta, setIsEstafeta] = useState(false);\r\n    const [toRegister, setToRegister] = useState(false);\r\n    let logged = store.getState();\r\n    let user = logged.cartReducer.user;\r\n    logged = logged.cartReducer.isLogged;\r\n    return (<>\r\n        {logged &&\r\n            <>\r\n                {isCliente &&\r\n                    <ClienteApp setIsLogged />\r\n                }\r\n                {isRestaurante &&\r\n                    <RestauranteApp restaurante={users[user]} setIsLogged />\r\n                }\r\n                {isEstafeta &&\r\n                    <EstafetaApp estafeta={users[user]} setIsLogged />\r\n                }\r\n            </>\r\n        }\r\n        {!logged && !toRegister &&\r\n            <Login user={user} setUser={setUser} setIsCliente={setIsCliente} setIsRestaurante={setIsRestaurante} setIsEstafeta={setIsEstafeta} setToRegister={setToRegister} />\r\n        }\r\n        {!logged && toRegister &&\r\n            <Register setToRegister={setToRegister} />\r\n        }\r\n    </>);\r\n}\r\n\r\nfunction Register({ setToRegister }) {\r\n    const [user, setUser] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confPass, setConfPass] = useState(\"\");\r\n    const [users, setUsers] = useState({});\r\n    useEffect(() => {\r\n        firebase.database().ref(\"Users\").once('value').then(res => setUsers(res.val()));\r\n    }, []);\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.title}>Nutrilink</Text>\r\n            <View style={styles.loginContainer}>\r\n                <View style={styles.inputView}>\r\n                    <TextInput placeholder='Username' style={styles.input} onChangeText={user => setUser(user)} />\r\n                </View>\r\n                <View style={styles.inputView}>\r\n                    <TextInput placeholder='Password' style={styles.input} onChangeText={pass => setPassword(pass)} secureTextEntry />\r\n                </View>\r\n                <View style={styles.inputView}>\r\n                    <TextInput placeholder='Confirm Password' style={styles.input} onChangeText={pass => setConfPass(pass)} secureTextEntry />\r\n                </View>\r\n                <View style={styles.containerRow}>\r\n                    <TouchableOpacity style={styles.loginButtonContainer} onPress={() => {\r\n                        if (password == confPass) {\r\n                            let tmpUsers = users\r\n                            tmpUsers[user]= {type: 'cliente', password:password};\r\n                            db.ref(\"Users\").set(tmpUsers);\r\n                            setToRegister(false);\r\n                            Restart();\r\n                        }\r\n                    }}>\r\n                        <Text style={styles.loginButtonText}>Confirmar</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nfunction Login({ navigation, setIsLogged, setIsCliente, setIsRestaurante, setIsEstafeta, user, setUser, setToRegister }) {\r\n    const [password, setPassword] = useState(\"\");\r\n    const [users, setUsers] = useState({});\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        firebase.database().ref(\"Users\").once('value').then(res => setUsers(res.val()));\r\n    }, []);\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.title}>Nutrilink</Text>\r\n            <View style={styles.loginContainer}>\r\n                <View style={styles.inputView}>\r\n                    <TextInput placeholder='Username' style={styles.input} onChangeText={username => dispatch(setUser(username))} />\r\n                </View>\r\n                <View style={styles.inputView}>\r\n                    <TextInput placeholder='Password' style={styles.input} onChangeText={pass => setPassword(pass)} secureTextEntry />\r\n                </View>\r\n                <View style={styles.containerRow}>\r\n                    <TouchableOpacity style={styles.loginButtonContainer} onPress={() => {\r\n\r\n                        let logged = store.getState();\r\n                        let user = logged.cartReducer.user;\r\n                        firebase.database().ref(\"Users\").once('value').then(res => setUsers(res.val()));\r\n                        for (let typeUser of Object.keys(users))\r\n                            if (user === typeUser) {\r\n                                if(password === users[user].password)\r\n                                    switch (users[user].type) {\r\n                                        case \"cliente\":\r\n                                            dispatch(setLogged(true));\r\n                                            setIsCliente(true);\r\n                                            break;\r\n                                        case \"restaurante\":\r\n                                            dispatch(setLogged(true));\r\n                                            setIsRestaurante(true);\r\n                                            setUser(users[user].restaurante);\r\n                                            break;\r\n                                        case \"estafeta\":\r\n                                            dispatch(setLogged(true));\r\n                                            setIsEstafeta(true);\r\n                                            break;\r\n                                        default:\r\n                                            break;\r\n                                    }\r\n                            }\r\n                    }}>\r\n                        <Text style={styles.loginButtonText}>Login</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.loginButtonContainer} onPress={() => { setToRegister(true); dispatch(setLogged(false)) }}>\r\n                        <Text style={styles.loginButtonText}>Registar</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: 'darkcyan',\r\n        alignItems: 'center',\r\n        flex: 1\r\n\r\n    },\r\n    containerRow: {\r\n        paddingTop: 20,\r\n        flexDirection: 'row'\r\n    },\r\n    loginContainer: {\r\n        backgroundColor: 'darkcyan',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        flex: 1\r\n    },\r\n    title: {\r\n        borderTopWidth: 100,\r\n        borderTopColor: 'darkcyan',\r\n        fontSize: 40,\r\n        fontWeight: 'bold',\r\n        color: 'cornsilk'\r\n    },\r\n    inputView: {\r\n        borderBottomWidth: 10,\r\n        borderBottomColor: 'darkcyan'\r\n    },\r\n    input: {\r\n        backgroundColor: 'darkgray',\r\n        padding: 15,\r\n        borderRadius: 5,\r\n    },\r\n    loginButtonContainer: {\r\n        elevation: 8,\r\n        backgroundColor: \"#009688\",\r\n        borderRadius: 28,\r\n        paddingVertical: 15,\r\n        paddingHorizontal: 25,\r\n\r\n    },\r\n    loginButtonText: {\r\n        fontSize: 18,\r\n        color: \"#fff\",\r\n        fontWeight: \"bold\",\r\n        alignSelf: \"center\",\r\n        textTransform: \"uppercase\"\r\n    }\r\n});","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/favicon.fa4783d1.png\";","module.exports = __webpack_public_path__ + \"static/media/quicheVegsGluten.cfd4c587.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cremedeespinafres.d64f4c65.jpg\";","module.exports = __webpack_public_path__ + \"static/media/saladaqueijoserra.b0d06c06.jpg\";"],"sourceRoot":""}